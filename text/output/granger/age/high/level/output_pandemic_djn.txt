
Time series regression with "ts" data:
Start = 2018(7), End = 2023(1)

Call:
dynlm(formula = inflation_expectations_3y ~ L(inflation_expectations_3y, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_3y.l1  inflation_expectations_3y.l2  inflation_expectations_3y.l3  
                    0.608080                      0.609631                      0.658151                     -0.642809  
inflation_expectations_3y.l4  inflation_expectations_3y.l5  inflation_expectations_3y.l6  inflation_expectations_1y.l1  
                    0.936425                     -0.126966                     -0.578497                      0.481450  
inflation_expectations_1y.l2  inflation_expectations_1y.l3  inflation_expectations_1y.l4  inflation_expectations_1y.l5  
                   -0.435383                      0.122284                     -0.868190                      0.578157  
inflation_expectations_1y.l6                  inflation.l1                  inflation.l2                  inflation.l3  
                    0.022717                     -5.921924                      5.161579                     -6.654523  
                inflation.l4                  inflation.l5                  inflation.l6          economic_activity.l1  
                   11.234403                     -0.603063                      5.556490                      0.242628  
        economic_activity.l2          economic_activity.l3          economic_activity.l4          economic_activity.l5  
                   -0.747735                     -0.421411                     -2.228869                     -0.921267  
        economic_activity.l6                   pandemic.l1                   pandemic.l2                   pandemic.l3  
                   -0.804009                      0.249357                      1.156295                      3.009954  
                 pandemic.l4                   pandemic.l5                   pandemic.l6                         dummy  
                   -3.961450                     -0.890449                     -0.464150                     -0.354210  
                      month1                        month2                        month3                        month4  
                    0.279872                     -0.293925                      0.359847                      0.264874  
                      month5                        month6                        month7                        month8  
                    0.656561                      0.007661                      0.012804                     -0.141748  
                      month9                       month10                       month11  
                   -0.078104                      0.396803                      0.158821  


Time series regression with "ts" data:
Start = 2018(7), End = 2023(1)

Call:
dynlm(formula = inflation_expectations_1y ~ L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_1y.l3  
                    -1.20254                       0.61721                      -0.30533                       1.00264  
inflation_expectations_1y.l4  inflation_expectations_1y.l5  inflation_expectations_1y.l6  inflation_expectations_3y.l1  
                    -0.65010                       0.41177                      -0.35812                       0.51959  
inflation_expectations_3y.l2  inflation_expectations_3y.l3  inflation_expectations_3y.l4  inflation_expectations_3y.l5  
                    -0.02363                      -0.37921                       0.31358                      -0.31231  
inflation_expectations_3y.l6                  inflation.l1                  inflation.l2                  inflation.l3  
                     0.61660                      -2.47894                       5.38019                      -7.21610  
                inflation.l4                  inflation.l5                  inflation.l6          economic_activity.l1  
                    12.42100                      -8.17869                       6.29102                      -2.58041  
        economic_activity.l2          economic_activity.l3          economic_activity.l4          economic_activity.l5  
                    -3.57912                      -3.50356                      -1.47858                      -0.11192  
        economic_activity.l6                   pandemic.l1                   pandemic.l2                   pandemic.l3  
                     1.80303                      -8.18215                      13.65639                       4.34565  
                 pandemic.l4                   pandemic.l5                   pandemic.l6                         dummy  
                    -0.98675                      -9.44394                      -2.00887                      -0.31351  
                      month1                        month2                        month3                        month4  
                     0.03598                      -0.39398                       0.08416                      -0.45861  
                      month5                        month6                        month7                        month8  
                     0.33406                       0.05102                       0.06107                      -0.10493  
                      month9                       month10                       month11  
                    -0.06746                       0.11535                      -0.30295  


Time series regression with "ts" data:
Start = 2018(7), End = 2023(1)

Call:
dynlm(formula = inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month, data = tsdata, start = c(2018, 1), end = c(2023, 
    1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_1y.l3  
                   -0.128234                      0.272222                     -0.281227                      0.138261  
inflation_expectations_1y.l4  inflation_expectations_1y.l5  inflation_expectations_1y.l6  inflation_expectations_3y.l1  
                   -0.183398                     -0.214091                     -0.087612                     -0.008268  
inflation_expectations_3y.l2  inflation_expectations_3y.l3  inflation_expectations_3y.l4  inflation_expectations_3y.l5  
                   -0.013665                      0.047623                     -0.001641                      0.017660  
inflation_expectations_3y.l6                  inflation.l1                  inflation.l2                  inflation.l3  
                   -0.033839                      0.045422                     -0.023004                     -0.004159  
                inflation.l4                  inflation.l5                  inflation.l6          economic_activity.l1  
                   -0.007571                     -0.006722                      0.049313                     -0.108000  
        economic_activity.l2          economic_activity.l3          economic_activity.l4          economic_activity.l5  
                   -0.183810                     -0.117647                     -0.073556                      0.073782  
        economic_activity.l6                   pandemic.l1                   pandemic.l2                   pandemic.l3  
                    0.063435                      0.049659                      0.390334                     -0.187896  
                 pandemic.l4                   pandemic.l5                   pandemic.l6                         dummy  
                   -0.107631                      0.137162                     -0.402765                     -0.040590  
                      month1                        month2                        month3                        month4  
                   -0.047154                     -0.006770                     -0.010194                     -0.016139  
                      month5                        month6                        month7                        month8  
                   -0.014800                     -0.023469                     -0.020734                     -0.012200  
                      month9                       month10                       month11  
                   -0.027649                     -0.005724                     -0.051055  


Time series regression with "ts" data:
Start = 2018(7), End = 2023(1)

Call:
dynlm(formula = economic_activity ~ L(economic_activity, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation_expectations_3y, 
    1:num_lags) + L(inflation, 1:num_lags) + L(tsdata[, topic], 
    1:num_lags) + dummy + month, data = tsdata, start = c(2018, 
    1), end = c(2023, 1))

Coefficients:
                   Intercept          economic_acticity.l1          economic_acticity.l2          economic_acticity.l3  
                    0.392955                      0.172008                      0.252602                      0.593313  
        economic_acticity.l4          economic_acticity.l5          economic_acticity.l6  inflation_expectations_1y.l1  
                   -0.508158                     -0.020918                     -1.167414                      0.104317  
inflation_expectations_1y.l2  inflation_expectations_1y.l3  inflation_expectations_1y.l4  inflation_expectations_1y.l5  
                   -0.179240                     -0.039849                     -0.100723                      0.121775  
inflation_expectations_1y.l6  inflation_expectations_3y.l1  inflation_expectations_3y.l2  inflation_expectations_3y.l3  
                    0.049199                      0.067855                     -0.133160                      0.099102  
inflation_expectations_3y.l4  inflation_expectations_3y.l5  inflation_expectations_3y.l6                  inflation.l1  
                    0.189985                     -0.261017                     -0.042966                      0.584144  
                inflation.l2                  inflation.l3                  inflation.l4                  inflation.l5  
                    0.468602                      0.055352                      2.785496                     -0.341306  
                inflation.l6                   pandemic.l1                   pandemic.l2                   pandemic.l3  
                    1.551090                      5.640859                     -6.234354                      0.095398  
                 pandemic.l4                   pandemic.l5                   pandemic.l6                         dummy  
                   -1.416883                      2.693450                      0.154748                      0.093849  
                      month1                        month2                        month3                        month4  
                   -0.073046                      0.003322                      0.064186                     -0.130599  
                      month5                        month6                        month7                        month8  
                    0.009083                     -0.085995                     -0.088352                     -0.136139  
                      month9                       month10                       month11  
                   -0.052453                     -0.050137                     -0.102606  


Time series regression with "ts" data:
Start = 2018(7), End = 2023(1)

Call:
dynlm(formula = tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept                   pandemic.l1                   pandemic.l2                   pandemic.l3  
                   -0.199818                      0.092568                      1.132648                     -0.129536  
                 pandemic.l4                   pandemic.l5                   pandemic.l6          economic_activity.l1  
                   -0.008062                     -0.928188                      0.217920                     -0.220200  
        economic_activity.l2          economic_activity.l3          economic_activity.l4          economic_activity.l5  
                   -0.206004                      0.101051                      0.127828                      0.339836  
        economic_activity.l6  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_1y.l3  
                    0.126631                      0.016602                      0.059146                      0.010712  
inflation_expectations_1y.l4  inflation_expectations_1y.l5  inflation_expectations_1y.l6  inflation_expectations_3y.l1  
                    0.011043                     -0.051174                     -0.001220                     -0.008727  
inflation_expectations_3y.l2  inflation_expectations_3y.l3  inflation_expectations_3y.l4  inflation_expectations_3y.l5  
                    0.003694                     -0.035782                      0.005864                      0.067322  
inflation_expectations_3y.l6                  inflation.l1                  inflation.l2                  inflation.l3  
                    0.001572                     -0.255539                     -0.471115                     -0.503675  
                inflation.l4                  inflation.l5                  inflation.l6                         dummy  
                   -1.014415                     -0.228771                     -0.724319                     -0.141034  
                      month1                        month2                        month3                        month4  
                    0.005271                     -0.027378                     -0.019089                      0.023061  
                      month5                        month6                        month7                        month8  
                   -0.007057                      0.030722                      0.035120                      0.031263  
                      month9                       month10                       month11  
                    0.013205                      0.009277                      0.011409  

[1] "diagnostics"
[1] "heteroskedasticity"

	ARCH (multivariate)

data:  Residuals of VAR object model
Chi-squared = 735, df = 1350, p-value = 1

[1] "serial correlation"

	Breusch-Godfrey LM test

data:  Residuals of VAR object model
Chi-squared = 275, df = 125, p-value = 2.769e-13

[1] "inflation expectations_3y"
Linear hypothesis test

Hypothesis:
pandemic.l1 = 0
pandemic.l2 = 0
pandemic.l3 = 0
pandemic.l4 = 0
pandemic.l5 = 0
pandemic.l6 = 0

Model 1: restricted model
Model 2: inflation_expectations_3y ~ L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F  Pr(>F)  
1     18                    
2     12  6 2.5549 0.07863 .
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "inflation expectations_1y"
Linear hypothesis test

Hypothesis:
pandemic.l1 = 0
pandemic.l2 = 0
pandemic.l3 = 0
pandemic.l4 = 0
pandemic.l5 = 0
pandemic.l6 = 0

Model 1: restricted model
Model 2: inflation_expectations_1y ~ L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F  Pr(>F)  
1     18                    
2     12  6 3.7098 0.02542 *
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "inflation"
Linear hypothesis test

Hypothesis:
pandemic.l1 = 0
pandemic.l2 = 0
pandemic.l3 = 0
pandemic.l4 = 0
pandemic.l5 = 0
pandemic.l6 = 0

Model 1: restricted model
Model 2: inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F  Pr(>F)  
1     18                    
2     12  6 2.9243 0.05372 .
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "economic_activity"
Linear hypothesis test

Hypothesis:
pandemic.l1 = 0
pandemic.l2 = 0
pandemic.l3 = 0
pandemic.l4 = 0
pandemic.l5 = 0
pandemic.l6 = 0

Model 1: restricted model
Model 2: economic_activity ~ L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F    Pr(>F)    
1     18                        
2     12  6 9.0352 0.0007085 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "feedback effects"
[1] "topic expectations 3y"
Linear hypothesis test

Hypothesis:
inflation_expectations_3y.l1 = 0
inflation_expectations_3y.l2 = 0
inflation_expectations_3y.l3 = 0
inflation_expectations_3y.l4 = 0
inflation_expectations_3y.l5 = 0
inflation_expectations_3y.l6 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F  Pr(>F)  
1     18                    
2     12  6 4.3791 0.01426 *
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "topic expectations_1y"
Linear hypothesis test

Hypothesis:
inflation_expectations_1y.l1 = 0
inflation_expectations_1y.l2 = 0
inflation_expectations_1y.l3 = 0
inflation_expectations_1y.l4 = 0
inflation_expectations_1y.l5 = 0
inflation_expectations_1y.l6 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F   Pr(>F)   
1     18                      
2     12  6 5.8665 0.004633 **
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "topic inflation"
Linear hypothesis test

Hypothesis:
inflation.l1 = 0
inflation.l2 = 0
inflation.l3 = 0
inflation.l4 = 0
inflation.l5 = 0
inflation.l6 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F  Pr(>F)  
1     18                    
2     12  6 4.6354 0.01158 *
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "topic activitiy"
Linear hypothesis test

Hypothesis:
economic_activity.l1 = 0
economic_activity.l2 = 0
economic_activity.l3 = 0
economic_activity.l4 = 0
economic_activity.l5 = 0
economic_activity.l6 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F    Pr(>F)    
1     18                        
2     12  6 32.975 8.854e-07 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
