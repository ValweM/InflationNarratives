
Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = inflation_expectations_3y ~ L(inflation_expectations_3y, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_3y.l1  inflation_expectations_1y.l1                  inflation.l1  
                    0.112353                      0.260307                      0.135993                      0.204775  
        economic_activity.l1                       debt.l1                         dummy                        month1  
                    0.033503                      0.653481                     -0.007228                     -0.173439  
                      month2                        month3                        month4                        month5  
                   -0.230452                     -0.229566                     -0.071381                      0.057148  
                      month6                        month7                        month8                        month9  
                   -0.300096                     -0.094331                     -0.107830                     -0.127327  
                     month10                       month11  
                    0.088709                     -0.141184  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = inflation_expectations_1y ~ L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_3y.l1                  inflation.l1  
                    -0.04673                       0.27393                       0.24087                       2.57757  
        economic_activity.l1                       debt.l1                         dummy                        month1  
                    -0.73339                      -3.13989                      -0.08556                      -0.12276  
                      month2                        month3                        month4                        month5  
                     0.12765                       0.07154                      -0.04914                       0.20461  
                      month6                        month7                        month8                        month9  
                     0.35575                       0.10653                       0.13642                       0.02085  
                     month10                       month11  
                     0.17281                      -0.31681  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month, data = tsdata, start = c(2018, 1), end = c(2023, 
    1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_3y.l1                  inflation.l1  
                   -0.001626                      0.315882                     -0.013745                      0.029816  
        economic_activity.l1                       debt.l1                         dummy                        month1  
                    0.020561                     -0.037229                     -0.033204                     -0.010204  
                      month2                        month3                        month4                        month5  
                    0.007799                      0.010941                     -0.001107                      0.020528  
                      month6                        month7                        month8                        month9  
                    0.026865                     -0.008044                      0.007036                     -0.002874  
                     month10                       month11  
                    0.018003                     -0.014699  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = economic_activity ~ L(economic_activity, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation_expectations_3y, 
    1:num_lags) + L(inflation, 1:num_lags) + L(tsdata[, topic], 
    1:num_lags) + dummy + month, data = tsdata, start = c(2018, 
    1), end = c(2023, 1))

Coefficients:
                   Intercept          economic_acticity.l1  inflation_expectations_1y.l1  inflation_expectations_3y.l1  
                   0.0016428                    -0.2690092                     0.0427705                    -0.0456281  
                inflation.l1                       debt.l1                         dummy                        month1  
                   0.4254612                     1.9326548                    -0.0153196                     0.0148889  
                      month2                        month3                        month4                        month5  
                  -0.0003445                    -0.0410041                    -0.1446262                     0.0031966  
                      month6                        month7                        month8                        month9  
                   0.0392505                     0.0009171                     0.0207582                     0.0554784  
                     month10                       month11  
                   0.0344587                     0.0055770  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept                       debt.l1          economic_activity.l1  inflation_expectations_1y.l1  
                  -0.0039214                     0.4807608                    -0.0001846                    -0.0040912  
inflation_expectations_3y.l1                  inflation.l1                         dummy                        month1  
                  -0.0018599                     0.0730710                    -0.0138615                     0.0125398  
                      month2                        month3                        month4                        month5  
                   0.0115119                    -0.0097942                     0.0150842                     0.0083217  
                      month6                        month7                        month8                        month9  
                  -0.0008510                     0.0107100                    -0.0096367                     0.0049467  
                     month10                       month11  
                   0.0115168                     0.0101460  

[1] "diagnostics"
[1] "heteroskedasticity"

	ARCH (multivariate)

data:  Residuals of VAR object model
Chi-squared = 311.27, df = 225, p-value = 0.0001214

[1] "serial correlation"

	Breusch-Godfrey LM test

data:  Residuals of VAR object model
Chi-squared = 177.65, df = 125, p-value = 0.001383

[1] "inflation expectations_3y"
Linear hypothesis test

Hypothesis:
debt.l1 = 0

Model 1: restricted model
Model 2: inflation_expectations_3y ~ L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 0.0729 0.7884
[1] "inflation expectations_1y"
Linear hypothesis test

Hypothesis:
debt.l1 = 0

Model 1: restricted model
Model 2: inflation_expectations_1y ~ L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 1.3673 0.2489
[1] "inflation"
Linear hypothesis test

Hypothesis:
debt.l1 = 0

Model 1: restricted model
Model 2: inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 0.0324 0.8581
[1] "economic_activity"
Linear hypothesis test

Hypothesis:
debt.l1 = 0

Model 1: restricted model
Model 2: economic_activity ~ L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 1.8673 0.1791
[1] "feedback effects"
[1] "topic expectations 3y"
Linear hypothesis test

Hypothesis:
inflation_expectations_3y.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 0.0343  0.854
[1] "topic expectations_1y"
Linear hypothesis test

Hypothesis:
inflation_expectations_1y.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 0.2811 0.5988
[1] "topic inflation"
Linear hypothesis test

Hypothesis:
inflation.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 0.4881 0.4886
[1] "topic activitiy"
Linear hypothesis test

Hypothesis:
economic_activity.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df     F Pr(>F)
1     43                
2     42  1 1e-04 0.9942
