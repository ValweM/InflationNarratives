
Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = inflation_expectations_3y ~ L(inflation_expectations_3y, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_3y.l1  inflation_expectations_1y.l1                  inflation.l1  
                    0.166446                      0.162371                      0.177596                     -0.226851  
        economic_activity.l1        government_spending.l1                         dummy                        month1  
                   -0.277258                     16.922114                     -0.081381                     -0.137204  
                      month2                        month3                        month4                        month5  
                   -0.158612                     -0.219655                     -0.204665                     -0.216074  
                      month6                        month7                        month8                        month9  
                   -0.046815                     -0.367142                     -0.139546                     -0.134441  
                     month10                       month11  
                   -0.001866                     -0.249361  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = inflation_expectations_1y ~ L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_3y.l1                  inflation.l1  
                    0.094241                      0.625790                     -0.086228                      1.217701  
        economic_activity.l1        government_spending.l1                         dummy                        month1  
                   -0.799720                     10.535700                     -0.006257                     -0.225499  
                      month2                        month3                        month4                        month5  
                   -0.198472                      0.101392                     -0.247116                     -0.075262  
                      month6                        month7                        month8                        month9  
                    0.042173                     -0.243486                     -0.097542                     -0.051258  
                     month10                       month11  
                   -0.018046                     -0.156606  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month, data = tsdata, start = c(2018, 1), end = c(2023, 
    1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_3y.l1                  inflation.l1  
                   3.664e-03                     2.865e-01                    -5.258e-03                    -6.280e-03  
        economic_activity.l1        government_spending.l1                         dummy                        month1  
                   2.374e-02                     7.017e-01                    -3.054e-02                    -7.238e-03  
                      month2                        month3                        month4                        month5  
                  -3.677e-04                    -2.050e-03                    -1.132e-02                     1.343e-02  
                      month6                        month7                        month8                        month9  
                   2.234e-02                    -2.033e-02                    -2.294e-05                    -5.279e-03  
                     month10                       month11  
                   1.420e-02                    -1.605e-02  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = economic_activity ~ L(economic_activity, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation_expectations_3y, 
    1:num_lags) + L(inflation, 1:num_lags) + L(tsdata[, topic], 
    1:num_lags) + dummy + month, data = tsdata, start = c(2018, 
    1), end = c(2023, 1))

Coefficients:
                   Intercept          economic_acticity.l1  inflation_expectations_1y.l1  inflation_expectations_3y.l1  
                   0.0008443                    -0.1786733                    -0.0656501                     0.0573051  
                inflation.l1        government_spending.l1                         dummy                        month1  
                   1.0695456                    -1.9006653                    -0.0380033                    -0.0077903  
                      month2                        month3                        month4                        month5  
                   0.0171867                    -0.0134237                    -0.1359215                     0.0392497  
                      month6                        month7                        month8                        month9  
                   0.0559191                     0.0009977                     0.0481830                     0.0205094  
                     month10                       month11  
                   0.0201318                    -0.0048823  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept        government_spending.l1          economic_activity.l1  inflation_expectations_1y.l1  
                  -2.696e-03                     6.221e-01                    -1.262e-03                     6.530e-04  
inflation_expectations_3y.l1                  inflation.l1                         dummy                        month1  
                  -5.448e-03                    -5.038e-03                    -2.669e-03                     8.517e-03  
                      month2                        month3                        month4                        month5  
                   3.791e-03                     4.158e-03                     4.867e-03                     2.989e-03  
                      month6                        month7                        month8                        month9  
                   4.187e-03                     2.612e-04                    -5.415e-04                     8.485e-04  
                     month10                       month11  
                   6.767e-03                     9.022e-05  

[1] "diagnostics"
[1] "heteroskedasticity"

	ARCH (multivariate)

data:  Residuals of VAR object model
Chi-squared = 206.31, df = 225, p-value = 0.8092

[1] "serial correlation"

	Breusch-Godfrey LM test

data:  Residuals of VAR object model
Chi-squared = 184.83, df = 125, p-value = 0.0004069

[1] "inflation expectations_3y"
Linear hypothesis test

Hypothesis:
government_spending.l1 = 0

Model 1: restricted model
Model 2: inflation_expectations_3y ~ L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df     F   Pr(>F)   
1     43                     
2     42  1 7.511 0.008967 **
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "inflation expectations_1y"
Linear hypothesis test

Hypothesis:
government_spending.l1 = 0

Model 1: restricted model
Model 2: inflation_expectations_1y ~ L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 2.6305 0.1123
[1] "inflation"
Linear hypothesis test

Hypothesis:
government_spending.l1 = 0

Model 1: restricted model
Model 2: inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 0.4669 0.4981
[1] "economic_activity"
Linear hypothesis test

Hypothesis:
government_spending.l1 = 0

Model 1: restricted model
Model 2: economic_activity ~ L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 0.6841 0.4129
[1] "feedback effects"
[1] "topic expectations 3y"
Linear hypothesis test

Hypothesis:
inflation_expectations_3y.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 2.4087 0.1282
[1] "topic expectations_1y"
Linear hypothesis test

Hypothesis:
inflation_expectations_1y.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 0.0933 0.7615
[1] "topic inflation"
Linear hypothesis test

Hypothesis:
inflation.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df     F Pr(>F)
1     43                
2     42  1 0.028 0.8679
[1] "topic activitiy"
Linear hypothesis test

Hypothesis:
economic_activity.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 0.0421 0.8385
