
Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = inflation_expectations_3y ~ L(inflation_expectations_3y, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_3y.l1  inflation_expectations_1y.l1                  inflation.l1  
                   -0.011968                      0.413593                     -0.134146                      2.658056  
        economic_activity.l1                       debt.l1                         dummy                        month1  
                   -0.546344                     -0.515635                     -0.259987                     -0.024350  
                      month2                        month3                        month4                        month5  
                   -0.085581                      0.149409                      0.186681                     -0.025905  
                      month6                        month7                        month8                        month9  
                    0.106437                      0.006474                      0.063726                      0.055950  
                     month10                       month11  
                    0.089176                     -0.015752  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = inflation_expectations_1y ~ L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_3y.l1                  inflation.l1  
                   -0.007446                      0.285271                      0.269497                      5.176936  
        economic_activity.l1                       debt.l1                         dummy                        month1  
                   -0.542457                     -4.624395                     -0.174863                     -0.102131  
                      month2                        month3                        month4                        month5  
                    0.044083                      0.214377                     -0.066382                      0.106038  
                      month6                        month7                        month8                        month9  
                    0.157860                      0.012418                      0.039736                     -0.177414  
                     month10                       month11  
                    0.057001                     -0.024530  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month, data = tsdata, start = c(2018, 1), end = c(2023, 
    1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_3y.l1                  inflation.l1  
                   0.0057282                     0.3931373                    -0.0467051                     0.0637146  
        economic_activity.l1                       debt.l1                         dummy                        month1  
                   0.0251426                    -0.3510015                    -0.0351828                    -0.0153143  
                      month2                        month3                        month4                        month5  
                   0.0055356                     0.0094873                    -0.0116374                     0.0061657  
                      month6                        month7                        month8                        month9  
                   0.0254350                    -0.0241714                     0.0071408                    -0.0087904  
                     month10                       month11  
                  -0.0005734                    -0.0216881  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = economic_activity ~ L(economic_activity, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation_expectations_3y, 
    1:num_lags) + L(inflation, 1:num_lags) + L(tsdata[, topic], 
    1:num_lags) + dummy + month, data = tsdata, start = c(2018, 
    1), end = c(2023, 1))

Coefficients:
                   Intercept          economic_acticity.l1  inflation_expectations_1y.l1  inflation_expectations_3y.l1  
                   -0.006420                     -0.256604                     -0.012723                     -0.028765  
                inflation.l1                       debt.l1                         dummy                        month1  
                    0.735307                      1.088081                     -0.015983                      0.009816  
                      month2                        month3                        month4                        month5  
                    0.010338                     -0.020227                     -0.140261                      0.025148  
                      month6                        month7                        month8                        month9  
                    0.052585                      0.024411                      0.048673                      0.043189  
                     month10                       month11  
                    0.035343                      0.004922  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept                       debt.l1          economic_activity.l1  inflation_expectations_1y.l1  
                  -0.0032794                     0.4044696                    -0.0010683                    -0.0039381  
inflation_expectations_3y.l1                  inflation.l1                         dummy                        month1  
                   0.0045880                     0.1404887                    -0.0204807                     0.0126735  
                      month2                        month3                        month4                        month5  
                   0.0114219                    -0.0049497                     0.0100272                     0.0102681  
                      month6                        month7                        month8                        month9  
                  -0.0049926                     0.0059529                     0.0015282                     0.0008146  
                     month10                       month11  
                   0.0132281                     0.0092113  

[1] "diagnostics"
[1] "heteroskedasticity"

	ARCH (multivariate)

data:  Residuals of VAR object model
Chi-squared = 263.13, df = 225, p-value = 0.04128

[1] "serial correlation"

	Breusch-Godfrey LM test

data:  Residuals of VAR object model
Chi-squared = 193.88, df = 125, p-value = 7.715e-05

[1] "inflation expectations_3y"
Linear hypothesis test

Hypothesis:
debt.l1 = 0

Model 1: restricted model
Model 2: inflation_expectations_3y ~ L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 0.0601 0.8075
[1] "inflation expectations_1y"
Linear hypothesis test

Hypothesis:
debt.l1 = 0

Model 1: restricted model
Model 2: inflation_expectations_1y ~ L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F  Pr(>F)  
1     43                    
2     42  1 3.3089 0.07604 .
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "inflation"
Linear hypothesis test

Hypothesis:
debt.l1 = 0

Model 1: restricted model
Model 2: inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 1.7081 0.1983
[1] "economic_activity"
Linear hypothesis test

Hypothesis:
debt.l1 = 0

Model 1: restricted model
Model 2: economic_activity ~ L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 0.8393 0.3648
[1] "feedback effects"
[1] "topic expectations 3y"
Linear hypothesis test

Hypothesis:
inflation_expectations_3y.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 0.1674 0.6845
[1] "topic expectations_1y"
Linear hypothesis test

Hypothesis:
inflation_expectations_1y.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 0.1593 0.6918
[1] "topic inflation"
Linear hypothesis test

Hypothesis:
inflation.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 1.6108 0.2114
[1] "topic activitiy"
Linear hypothesis test

Hypothesis:
economic_activity.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df     F Pr(>F)
1     43                
2     42  1 0.002 0.9645
