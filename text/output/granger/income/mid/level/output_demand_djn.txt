
Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = inflation_expectations_3y ~ L(inflation_expectations_3y, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_3y.l1  inflation_expectations_1y.l1                  inflation.l1  
                     0.62135                       0.84508                      -0.04441                       1.22068  
        economic_activity.l1                     demand.l1                         dummy                        month1  
                    -0.16599                       1.17345                       0.04671                      -0.08134  
                      month2                        month3                        month4                        month5  
                    -0.11941                       0.03534                      -0.05855                       0.05019  
                      month6                        month7                        month8                        month9  
                    -0.06635                      -0.05172                      -0.18594                      -0.01666  
                     month10                       month11  
                     0.19722                      -0.12675  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = inflation_expectations_1y ~ L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_3y.l1                  inflation.l1  
                     0.26313                       0.87969                       0.01909                       2.72607  
        economic_activity.l1                     demand.l1                         dummy                        month1  
                    -0.73170                       1.93419                       0.06698                       0.00372  
                      month2                        month3                        month4                        month5  
                     0.07556                       0.25958                       0.02663                       0.10225  
                      month6                        month7                        month8                        month9  
                     0.23450                      -0.01613                      -0.15173                       0.15959  
                     month10                       month11  
                     0.14593                       0.04170  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month, data = tsdata, start = c(2018, 1), end = c(2023, 
    1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_3y.l1                  inflation.l1  
                   -0.091937                      0.274924                      0.005695                      0.033504  
        economic_activity.l1                     demand.l1                         dummy                        month1  
                    0.031268                     -0.160701                     -0.032952                     -0.011474  
                      month2                        month3                        month4                        month5  
                    0.002309                      0.005590                     -0.011946                      0.016487  
                      month6                        month7                        month8                        month9  
                    0.019568                     -0.023971                     -0.002080                     -0.002948  
                     month10                       month11  
                    0.016966                     -0.017930  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = economic_activity ~ L(economic_activity, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation_expectations_3y, 
    1:num_lags) + L(inflation, 1:num_lags) + L(tsdata[, topic], 
    1:num_lags) + dummy + month, data = tsdata, start = c(2018, 
    1), end = c(2023, 1))

Coefficients:
                   Intercept          economic_acticity.l1  inflation_expectations_1y.l1  inflation_expectations_3y.l1  
                   -0.113607                     -0.197637                     -0.012887                      0.056630  
                inflation.l1                     demand.l1                         dummy                        month1  
                    0.975693                     -0.360305                     -0.061091                     -0.007586  
                      month2                        month3                        month4                        month5  
                    0.004868                     -0.004226                     -0.155938                      0.028994  
                      month6                        month7                        month8                        month9  
                    0.043033                     -0.008553                      0.046597                      0.030765  
                     month10                       month11  
                    0.035147                     -0.010580  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept                     demand.l1          economic_activity.l1  inflation_expectations_1y.l1  
                   -0.048429                      0.780693                     -0.019961                     -0.003293  
inflation_expectations_3y.l1                  inflation.l1                         dummy                        month1  
                    0.012807                      0.216576                     -0.019127                      0.019611  
                      month2                        month3                        month4                        month5  
                    0.026024                      0.008411                      0.019149                      0.025659  
                      month6                        month7                        month8                        month9  
                    0.017294                      0.011177                      0.016781                      0.019464  
                     month10                       month11  
                    0.025589                      0.007639  

[1] "diagnostics"
[1] "heteroskedasticity"

	ARCH (multivariate)

data:  Residuals of VAR object model
Chi-squared = 231.9, df = 225, p-value = 0.362

[1] "serial correlation"

	Breusch-Godfrey LM test

data:  Residuals of VAR object model
Chi-squared = 190.87, df = 125, p-value = 0.000136

[1] "inflation expectations_3y"
Linear hypothesis test

Hypothesis:
demand.l1 = 0

Model 1: restricted model
Model 2: inflation_expectations_3y ~ L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 2.4727 0.1233
[1] "inflation expectations_1y"
Linear hypothesis test

Hypothesis:
demand.l1 = 0

Model 1: restricted model
Model 2: inflation_expectations_1y ~ L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 2.5564 0.1173
[1] "inflation"
Linear hypothesis test

Hypothesis:
demand.l1 = 0

Model 1: restricted model
Model 2: inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 1.8453 0.1816
[1] "economic_activity"
Linear hypothesis test

Hypothesis:
demand.l1 = 0

Model 1: restricted model
Model 2: economic_activity ~ L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 1.1723 0.2851
[1] "feedback effects"
[1] "topic expectations 3y"
Linear hypothesis test

Hypothesis:
inflation_expectations_3y.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df     F Pr(>F)
1     43                
2     42  1 1.414 0.2411
[1] "topic expectations_1y"
Linear hypothesis test

Hypothesis:
inflation_expectations_1y.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 1.2277 0.2742
[1] "topic inflation"
Linear hypothesis test

Hypothesis:
inflation.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F  Pr(>F)  
1     43                    
2     42  1 4.5441 0.03893 *
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "topic activitiy"
Linear hypothesis test

Hypothesis:
economic_activity.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 0.5654 0.4563
