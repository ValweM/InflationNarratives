
Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation_expectations_3y ~ L(inflation_expectations_3y, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_3y.l1  inflation_expectations_3y.l2  inflation_expectations_1y.l1  
                    1.535781                      0.344972                      0.247079                      0.319060  
inflation_expectations_1y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                   -0.319962                      2.498103                     -1.681897                      0.173241  
        economic_activity.l2                     supply.l1                     supply.l2                         dummy  
                    0.697599                      8.697719                      5.452812                      0.169288  
                      month1                        month2                        month3                        month4  
                   -0.407137                     -0.250217                     -0.561881                     -0.193859  
                      month5                        month6                        month7                        month8  
                    0.006498                     -0.211608                     -0.242331                     -0.351183  
                      month9                       month10                       month11  
                   -0.059238                      0.013408                     -0.431705  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation_expectations_1y ~ L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                   0.0295791                     0.5590081                     0.3216523                     0.3916720  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                  -0.1593102                    -2.3696391                    -0.8478652                     0.0858043  
        economic_activity.l2                     supply.l1                     supply.l2                         dummy  
                   0.9171967                    16.1607174                    -3.2287409                     0.1641198  
                      month1                        month2                        month3                        month4  
                  -0.1277887                    -0.0755481                    -0.1606655                    -0.1618936  
                      month5                        month6                        month7                        month8  
                  -0.0536481                     0.2544865                    -0.0296650                    -0.1962821  
                      month9                       month10                       month11  
                   0.0005129                    -0.0598997                    -0.3897349  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month, data = tsdata, start = c(2018, 1), end = c(2023, 
    1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                  -0.0088834                     0.2436068                    -0.3958262                     0.0231359  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                  -0.0110753                     0.0232008                    -0.0151142                     0.0673861  
        economic_activity.l2                     supply.l1                     supply.l2                         dummy  
                   0.0380190                     0.9801509                    -0.4607296                    -0.0186507  
                      month1                        month2                        month3                        month4  
                  -0.0322899                    -0.0083484                    -0.0209209                    -0.0183136  
                      month5                        month6                        month7                        month8  
                   0.0029760                     0.0004734                    -0.0375287                    -0.0150613  
                      month9                       month10                       month11  
                  -0.0166749                    -0.0118581                    -0.0400370  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = economic_activity ~ L(economic_activity, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation_expectations_3y, 
    1:num_lags) + L(inflation, 1:num_lags) + L(tsdata[, topic], 
    1:num_lags) + dummy + month, data = tsdata, start = c(2018, 
    1), end = c(2023, 1))

Coefficients:
                   Intercept          economic_acticity.l1          economic_acticity.l2  inflation_expectations_1y.l1  
                    0.282735                     -0.368660                     -0.408298                      0.003201  
inflation_expectations_1y.l2  inflation_expectations_3y.l1  inflation_expectations_3y.l2                  inflation.l1  
                   -0.016835                     -0.013254                     -0.042632                      1.688107  
                inflation.l2                     supply.l1                     supply.l2                         dummy  
                   -0.168326                      0.225997                      3.202204                     -0.048068  
                      month1                        month2                        month3                        month4  
                   -0.020002                      0.009333                     -0.056677                     -0.197114  
                      month5                        month6                        month7                        month8  
                   -0.030592                     -0.054752                     -0.021365                      0.064413  
                      month9                       month10                       month11  
                    0.018206                      0.045036                     -0.007847  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept                     supply.l1                     supply.l2          economic_activity.l1  
                  -4.696e-03                     7.507e-01                     1.283e-01                     6.898e-03  
        economic_activity.l2  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                   1.606e-02                    -1.228e-03                     1.178e-03                     7.182e-04  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2                         dummy  
                   1.155e-03                     2.959e-02                    -4.504e-02                     8.138e-03  
                      month1                        month2                        month3                        month4  
                   4.759e-04                    -2.610e-03                    -8.139e-03                    -1.466e-03  
                      month5                        month6                        month7                        month8  
                  -3.268e-03                    -5.425e-03                    -3.360e-04                    -1.131e-02  
                      month9                       month10                       month11  
                  -1.940e-04                    -9.116e-07                    -4.873e-03  

[1] "diagnostics"
[1] "heteroskedasticity"

	ARCH (multivariate)

data:  Residuals of VAR object model
Chi-squared = 485.69, df = 450, p-value = 0.1187

[1] "serial correlation"

	Breusch-Godfrey LM test

data:  Residuals of VAR object model
Chi-squared = 216.29, df = 125, p-value = 7.552e-07

[1] "inflation expectations_3y"
Linear hypothesis test

Hypothesis:
supply.l1 = 0
supply.l2 = 0

Model 1: restricted model
Model 2: inflation_expectations_3y ~ L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.8618 0.1701
[1] "inflation expectations_1y"
Linear hypothesis test

Hypothesis:
supply.l1 = 0
supply.l2 = 0

Model 1: restricted model
Model 2: inflation_expectations_1y ~ L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F  Pr(>F)  
1     38                    
2     36  2 3.4188 0.04371 *
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "inflation"
Linear hypothesis test

Hypothesis:
supply.l1 = 0
supply.l2 = 0

Model 1: restricted model
Model 2: inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.6455 0.2071
[1] "economic_activity"
Linear hypothesis test

Hypothesis:
supply.l1 = 0
supply.l2 = 0

Model 1: restricted model
Model 2: economic_activity ~ L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.4168 0.2557
[1] "feedback effects"
[1] "topic expectations 3y"
Linear hypothesis test

Hypothesis:
inflation_expectations_3y.l1 = 0
inflation_expectations_3y.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.2176 0.8055
[1] "topic expectations_1y"
Linear hypothesis test

Hypothesis:
inflation_expectations_1y.l1 = 0
inflation_expectations_1y.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df     F Pr(>F)
1     38                
2     36  2 0.082 0.9215
[1] "topic inflation"
Linear hypothesis test

Hypothesis:
inflation.l1 = 0
inflation.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.8899 0.4195
[1] "topic activitiy"
Linear hypothesis test

Hypothesis:
economic_activity.l1 = 0
economic_activity.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.7793 0.1833
