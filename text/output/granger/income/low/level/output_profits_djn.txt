
Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation_expectations_3y ~ L(inflation_expectations_3y, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_3y.l1  inflation_expectations_3y.l2  inflation_expectations_1y.l1  
                    2.677853                      0.253697                      0.230233                      0.166060  
inflation_expectations_1y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                   -0.369127                      3.274241                     -1.681183                      0.061671  
        economic_activity.l2                    profits.l1                    profits.l2                         dummy  
                    0.149693                     10.478406                      7.170867                      0.216104  
                      month1                        month2                        month3                        month4  
                   -0.307613                     -0.220670                     -0.648056                     -0.292335  
                      month5                        month6                        month7                        month8  
                   -0.105171                     -0.272170                     -0.125459                     -0.264132  
                      month9                       month10                       month11  
                   -0.091982                     -0.008667                     -0.425974  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation_expectations_1y ~ L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                     1.13520                       0.50108                       0.21564                       0.27881  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                    -0.18057                      -1.30309                      -0.40102                      -0.44452  
        economic_activity.l2                    profits.l1                    profits.l2                         dummy  
                     0.28323                      15.04697                       0.01208                       0.15266  
                      month1                        month2                        month3                        month4  
                    -0.06449                      -0.13845                      -0.28555                      -0.31089  
                      month5                        month6                        month7                        month8  
                    -0.24236                       0.18825                      -0.01275                      -0.15553  
                      month9                       month10                       month11  
                    -0.14285                      -0.05255                      -0.44355  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month, data = tsdata, start = c(2018, 1), end = c(2023, 
    1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                  -1.352e-02                     2.918e-01                    -2.979e-01                     3.823e-02  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                  -2.225e-02                     1.971e-02                    -1.489e-02                     1.557e-02  
        economic_activity.l2                    profits.l1                    profits.l2                         dummy  
                   2.111e-02                     7.912e-01                    -9.006e-01                    -2.959e-02  
                      month1                        month2                        month3                        month4  
                  -3.866e-02                    -2.329e-02                    -2.512e-02                    -2.357e-02  
                      month5                        month6                        month7                        month8  
                  -7.886e-03                     4.858e-05                    -5.164e-02                    -2.406e-02  
                      month9                       month10                       month11  
                  -3.206e-02                    -1.306e-02                    -5.286e-02  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = economic_activity ~ L(economic_activity, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation_expectations_3y, 
    1:num_lags) + L(inflation, 1:num_lags) + L(tsdata[, topic], 
    1:num_lags) + dummy + month, data = tsdata, start = c(2018, 
    1), end = c(2023, 1))

Coefficients:
                   Intercept          economic_acticity.l1          economic_acticity.l2  inflation_expectations_1y.l1  
                   0.1128046                    -0.3289222                    -0.3808496                     0.0441639  
inflation_expectations_1y.l2  inflation_expectations_3y.l1  inflation_expectations_3y.l2                  inflation.l1  
                  -0.0373182                    -0.0030773                    -0.0366404                     1.7099336  
                inflation.l2                    profits.l1                    profits.l2                         dummy  
                   0.1402929                    -0.3285723                    -0.4577226                    -0.0898718  
                      month1                        month2                        month3                        month4  
                  -0.0389742                     0.0004472                    -0.0290861                    -0.1718656  
                      month5                        month6                        month7                        month8  
                  -0.0090279                    -0.0430876                    -0.0459921                     0.0434836  
                      month9                       month10                       month11  
                   0.0100863                     0.0206745                    -0.0348400  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept                    profits.l1                    profits.l2          economic_activity.l1  
                  -0.0062497                     0.6327025                     0.1103711                     0.0101054  
        economic_activity.l2  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                  -0.0273622                     0.0137449                    -0.0121657                    -0.0033318  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2                         dummy  
                   0.0007354                     0.0580895                     0.0989768                    -0.0046509  
                      month1                        month2                        month3                        month4  
                   0.0076587                     0.0053663                    -0.0013782                     0.0034026  
                      month5                        month6                        month7                        month8  
                  -0.0022399                    -0.0064831                     0.0014314                     0.0028745  
                      month9                       month10                       month11  
                  -0.0006633                     0.0108555                    -0.0071472  

[1] "diagnostics"
[1] "heteroskedasticity"

	ARCH (multivariate)

data:  Residuals of VAR object model
Chi-squared = 483.56, df = 450, p-value = 0.1327

[1] "serial correlation"

	Breusch-Godfrey LM test

data:  Residuals of VAR object model
Chi-squared = 211.07, df = 125, p-value = 2.353e-06

[1] "inflation expectations_3y"
Linear hypothesis test

Hypothesis:
profits.l1 = 0
profits.l2 = 0

Model 1: restricted model
Model 2: inflation_expectations_3y ~ L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F  Pr(>F)  
1     38                    
2     36  2 4.8776 0.01335 *
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "inflation expectations_1y"
Linear hypothesis test

Hypothesis:
profits.l1 = 0
profits.l2 = 0

Model 1: restricted model
Model 2: inflation_expectations_1y ~ L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F    Pr(>F)    
1     38                        
2     36  2 9.0173 0.0006689 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "inflation"
Linear hypothesis test

Hypothesis:
profits.l1 = 0
profits.l2 = 0

Model 1: restricted model
Model 2: inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 2.2208 0.1232
[1] "economic_activity"
Linear hypothesis test

Hypothesis:
profits.l1 = 0
profits.l2 = 0

Model 1: restricted model
Model 2: economic_activity ~ L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df     F Pr(>F)
1     38                
2     36  2 0.198 0.8213
[1] "feedback effects"
[1] "topic expectations 3y"
Linear hypothesis test

Hypothesis:
inflation_expectations_3y.l1 = 0
inflation_expectations_3y.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.2596 0.7728
[1] "topic expectations_1y"
Linear hypothesis test

Hypothesis:
inflation_expectations_1y.l1 = 0
inflation_expectations_1y.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F  Pr(>F)  
1     38                    
2     36  2 3.3375 0.04681 *
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "topic inflation"
Linear hypothesis test

Hypothesis:
inflation.l1 = 0
inflation.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.1751 0.3204
[1] "topic activitiy"
Linear hypothesis test

Hypothesis:
economic_activity.l1 = 0
economic_activity.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.4586  0.246
