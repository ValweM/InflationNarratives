
Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation_expectations_3y ~ L(inflation_expectations_3y, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_3y.l1  inflation_expectations_3y.l2  inflation_expectations_1y.l1  
                    1.452439                      0.344873                      0.213462                      0.379969  
inflation_expectations_1y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                   -0.382072                      3.143031                     -1.127911                      0.210487  
        economic_activity.l2             labor_shortage.l1             labor_shortage.l2                         dummy  
                    0.636198                      6.365146                      4.000167                      0.119218  
                      month1                        month2                        month3                        month4  
                   -0.422203                     -0.186952                     -0.514286                     -0.173376  
                      month5                        month6                        month7                        month8  
                    0.051105                     -0.215434                     -0.297098                     -0.344074  
                      month9                       month10                       month11  
                   -0.092780                      0.006437                     -0.435362  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation_expectations_1y ~ L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                    -0.03655                       0.65030                       0.24461                       0.39094  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                    -0.21401                      -1.77781                      -0.22033                       0.01538  
        economic_activity.l2             labor_shortage.l1             labor_shortage.l2                         dummy  
                     0.80533                      12.69056                      -4.73366                       0.06804  
                      month1                        month2                        month3                        month4  
                    -0.09449                       0.05767                      -0.10899                      -0.12901  
                      month5                        month6                        month7                        month8  
                     0.01183                       0.24436                      -0.08149                      -0.12846  
                      month9                       month10                       month11  
                    -0.06762                       0.01216                      -0.39639  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month, data = tsdata, start = c(2018, 1), end = c(2023, 
    1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                  -0.0199463                     0.2395413                    -0.3474873                     0.0320995  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                  -0.0166410                     0.0236416                    -0.0181358                     0.0610094  
        economic_activity.l2             labor_shortage.l1             labor_shortage.l2                         dummy  
                   0.0331351                     1.1690269                    -1.2406775                    -0.0277745  
                      month1                        month2                        month3                        month4  
                  -0.0282238                     0.0006393                    -0.0181091                    -0.0130945  
                      month5                        month6                        month7                        month8  
                   0.0075271                     0.0002949                    -0.0393081                    -0.0100600  
                      month9                       month10                       month11  
                  -0.0207868                    -0.0052969                    -0.0453395  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = economic_activity ~ L(economic_activity, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation_expectations_3y, 
    1:num_lags) + L(inflation, 1:num_lags) + L(tsdata[, topic], 
    1:num_lags) + dummy + month, data = tsdata, start = c(2018, 
    1), end = c(2023, 1))

Coefficients:
                   Intercept          economic_acticity.l1          economic_acticity.l2  inflation_expectations_1y.l1  
                    0.184585                     -0.330091                     -0.392895                      0.045772  
inflation_expectations_1y.l2  inflation_expectations_3y.l1  inflation_expectations_3y.l2                  inflation.l1  
                   -0.042915                     -0.009096                     -0.045244                      1.577429  
                inflation.l2             labor_shortage.l1             labor_shortage.l2                         dummy  
                    0.099089                      3.921044                     -3.936258                     -0.076174  
                      month1                        month2                        month3                        month4  
                   -0.026200                      0.014285                     -0.044949                     -0.164273  
                      month5                        month6                        month7                        month8  
                   -0.017839                     -0.050435                     -0.030005                      0.050534  
                      month9                       month10                       month11  
                    0.021146                      0.031251                     -0.054505  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept             labor_shortage.l1             labor_shortage.l2          economic_activity.l1  
                   0.0026393                     0.5689012                     0.2764091                    -0.0029165  
        economic_activity.l2  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                  -0.0161792                     0.0027137                    -0.0029414                     0.0020720  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2                         dummy  
                  -0.0031671                     0.0454821                     0.0415803                    -0.0012660  
                      month1                        month2                        month3                        month4  
                  -0.0033192                     0.0026992                    -0.0027321                    -0.0004684  
                      month5                        month6                        month7                        month8  
                   0.0006706                    -0.0038189                    -0.0022430                    -0.0023142  
                      month9                       month10                       month11  
                  -0.0026193                     0.0051343                     0.0019549  

[1] "diagnostics"
[1] "heteroskedasticity"

	ARCH (multivariate)

data:  Residuals of VAR object model
Chi-squared = 483.06, df = 450, p-value = 0.136

[1] "serial correlation"

	Breusch-Godfrey LM test

data:  Residuals of VAR object model
Chi-squared = 224.88, df = 125, p-value = 1.079e-07

[1] "inflation expectations_3y"
Linear hypothesis test

Hypothesis:
labor_shortage.l1 = 0
labor_shortage.l2 = 0

Model 1: restricted model
Model 2: inflation_expectations_3y ~ L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.4276 0.2531
[1] "inflation expectations_1y"
Linear hypothesis test

Hypothesis:
labor_shortage.l1 = 0
labor_shortage.l2 = 0

Model 1: restricted model
Model 2: inflation_expectations_1y ~ L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.4975 0.2373
[1] "inflation"
Linear hypothesis test

Hypothesis:
labor_shortage.l1 = 0
labor_shortage.l2 = 0

Model 1: restricted model
Model 2: inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.2624 0.2952
[1] "economic_activity"
Linear hypothesis test

Hypothesis:
labor_shortage.l1 = 0
labor_shortage.l2 = 0

Model 1: restricted model
Model 2: economic_activity ~ L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.7043 0.5011
[1] "feedback effects"
[1] "topic expectations 3y"
Linear hypothesis test

Hypothesis:
inflation_expectations_3y.l1 = 0
inflation_expectations_3y.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.6284 0.2104
[1] "topic expectations_1y"
Linear hypothesis test

Hypothesis:
inflation_expectations_1y.l1 = 0
inflation_expectations_1y.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.1376 0.3319
[1] "topic inflation"
Linear hypothesis test

Hypothesis:
inflation.l1 = 0
inflation.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.3931 0.2614
[1] "topic activitiy"
Linear hypothesis test

Hypothesis:
economic_activity.l1 = 0
economic_activity.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.8989 0.1644
