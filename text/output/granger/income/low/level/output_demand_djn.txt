
Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation_expectations_3y ~ L(inflation_expectations_3y, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_3y.l1  inflation_expectations_3y.l2  inflation_expectations_1y.l1  
                     1.52181                       0.34490                       0.19799                       0.37779  
inflation_expectations_1y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                    -0.38043                       3.93476                      -1.38563                       0.33008  
        economic_activity.l2                     demand.l1                     demand.l2                         dummy  
                     0.51775                      -1.97307                       4.20881                       0.11801  
                      month1                        month2                        month3                        month4  
                    -0.45529                      -0.12631                      -0.48751                      -0.22022  
                      month5                        month6                        month7                        month8  
                     0.06714                      -0.23480                      -0.33501                      -0.35177  
                      month9                       month10                       month11  
                    -0.13933                      -0.03981                      -0.45778  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation_expectations_1y ~ L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                    -0.07534                       0.56940                       0.31582                       0.40152  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                    -0.18078                      -1.70660                      -1.00201                      -0.09630  
        economic_activity.l2                     demand.l1                     demand.l2                         dummy  
                     0.76431                       2.21354                      -0.06757                       0.06055  
                      month1                        month2                        month3                        month4  
                    -0.06087                       0.04240                      -0.10122                      -0.14594  
                      month5                        month6                        month7                        month8  
                    -0.01326                       0.24007                      -0.08290                      -0.13592  
                      month9                       month10                       month11  
                    -0.10452                      -0.05100                      -0.36578  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month, data = tsdata, start = c(2018, 1), end = c(2023, 
    1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                   -0.038377                      0.169603                     -0.395893                      0.023135  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                   -0.008573                      0.025414                     -0.011351                      0.036207  
        economic_activity.l2                     demand.l1                     demand.l2                         dummy  
                    0.041296                      0.459320                     -0.471138                     -0.031187  
                      month1                        month2                        month3                        month4  
                   -0.021541                     -0.009284                     -0.018283                     -0.010224  
                      month5                        month6                        month7                        month8  
                    0.004093                      0.002932                     -0.036169                     -0.010311  
                      month9                       month10                       month11  
                   -0.021092                     -0.008483                     -0.038089  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = economic_activity ~ L(economic_activity, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation_expectations_3y, 
    1:num_lags) + L(inflation, 1:num_lags) + L(tsdata[, topic], 
    1:num_lags) + dummy + month, data = tsdata, start = c(2018, 
    1), end = c(2023, 1))

Coefficients:
                   Intercept          economic_acticity.l1          economic_acticity.l2  inflation_expectations_1y.l1  
                    0.114854                     -0.426774                     -0.361501                      0.013079  
inflation_expectations_1y.l2  inflation_expectations_3y.l1  inflation_expectations_3y.l2                  inflation.l1  
                   -0.012303                     -0.002449                     -0.020303                      1.284183  
                inflation.l2                     demand.l1                     demand.l2                         dummy  
                   -0.101506                      1.791848                     -1.774113                     -0.088596  
                      month1                        month2                        month3                        month4  
                    0.001273                     -0.021232                     -0.047264                     -0.150915  
                      month5                        month6                        month7                        month8  
                   -0.032000                     -0.041368                     -0.016945                      0.049546  
                      month9                       month10                       month11  
                    0.020629                      0.019394                     -0.031736  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept                     demand.l1                     demand.l2          economic_activity.l1  
                   -0.028667                      1.282584                     -0.411269                     -0.050248  
        economic_activity.l2  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                    0.018390                     -0.011684                      0.011986                      0.006268  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2                         dummy  
                   -0.001293                      0.228215                     -0.230227                     -0.017879  
                      month1                        month2                        month3                        month4  
                    0.026080                      0.026767                      0.001553                      0.025539  
                      month5                        month6                        month7                        month8  
                    0.017623                      0.016127                      0.013369                      0.018359  
                      month9                       month10                       month11  
                    0.018714                      0.018733                      0.005556  

[1] "diagnostics"
[1] "heteroskedasticity"

	ARCH (multivariate)

data:  Residuals of VAR object model
Chi-squared = 472.44, df = 450, p-value = 0.2242

[1] "serial correlation"

	Breusch-Godfrey LM test

data:  Residuals of VAR object model
Chi-squared = 213.44, df = 125, p-value = 1.413e-06

[1] "inflation expectations_3y"
Linear hypothesis test

Hypothesis:
demand.l1 = 0
demand.l2 = 0

Model 1: restricted model
Model 2: inflation_expectations_3y ~ L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F  Pr(>F)  
1     38                    
2     36  2 2.7355 0.07835 .
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "inflation expectations_1y"
Linear hypothesis test

Hypothesis:
demand.l1 = 0
demand.l2 = 0

Model 1: restricted model
Model 2: inflation_expectations_1y ~ L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.5187 0.2327
[1] "inflation"
Linear hypothesis test

Hypothesis:
demand.l1 = 0
demand.l2 = 0

Model 1: restricted model
Model 2: inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F  Pr(>F)  
1     38                    
2     36  2 2.8615 0.07025 .
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "economic_activity"
Linear hypothesis test

Hypothesis:
demand.l1 = 0
demand.l2 = 0

Model 1: restricted model
Model 2: economic_activity ~ L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.3496 0.2721
[1] "feedback effects"
[1] "topic expectations 3y"
Linear hypothesis test

Hypothesis:
inflation_expectations_3y.l1 = 0
inflation_expectations_3y.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.3696 0.6936
[1] "topic expectations_1y"
Linear hypothesis test

Hypothesis:
inflation_expectations_1y.l1 = 0
inflation_expectations_1y.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.8556 0.4335
[1] "topic inflation"
Linear hypothesis test

Hypothesis:
inflation.l1 = 0
inflation.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F  Pr(>F)  
1     38                    
2     36  2 2.9041 0.06772 .
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "topic activitiy"
Linear hypothesis test

Hypothesis:
economic_activity.l1 = 0
economic_activity.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.4717  0.243
