
Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation_expectations_3y ~ L(inflation_expectations_3y, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_3y.l1  inflation_expectations_3y.l2  inflation_expectations_1y.l1  
                     1.40382                       0.37184                       0.24535                       0.38585  
inflation_expectations_1y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                    -0.38713                       3.66389                      -1.34416                       0.13076  
        economic_activity.l2                       debt.l1                       debt.l2                         dummy  
                     0.46498                      -0.95720                       2.79357                       0.05744  
                      month1                        month2                        month3                        month4  
                    -0.46565                      -0.19019                      -0.50701                      -0.19496  
                      month5                        month6                        month7                        month8  
                     0.06807                      -0.24048                      -0.33087                      -0.30856  
                      month9                       month10                       month11  
                    -0.13678                      -0.02140                      -0.45968  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation_expectations_1y ~ L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                     0.01036                       0.59203                       0.27085                       0.42305  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                    -0.17291                      -1.12409                      -0.72612                      -0.11888  
        economic_activity.l2                       debt.l1                       debt.l2                         dummy  
                     0.61654                       0.17870                       2.28662                       0.05835  
                      month1                        month2                        month3                        month4  
                    -0.13060                       0.04073                      -0.09759                      -0.16532  
                      month5                        month6                        month7                        month8  
                     0.01456                       0.22755                      -0.08552                      -0.09105  
                      month9                       month10                       month11  
                    -0.09603                      -0.01886                      -0.35243  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month, data = tsdata, start = c(2018, 1), end = c(2023, 
    1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                   -0.034957                      0.186228                     -0.320304                      0.026800  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                   -0.012568                      0.025095                     -0.014794                      0.060585  
        economic_activity.l2                       debt.l1                       debt.l2                         dummy  
                    0.047349                      0.296469                     -0.334931                     -0.027212  
                      month1                        month2                        month3                        month4  
                   -0.023095                     -0.004758                     -0.011718                     -0.008074  
                      month5                        month6                        month7                        month8  
                    0.008372                      0.007767                     -0.032453                     -0.013952  
                      month9                       month10                       month11  
                   -0.017680                     -0.006262                     -0.036947  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = economic_activity ~ L(economic_activity, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation_expectations_3y, 
    1:num_lags) + L(inflation, 1:num_lags) + L(tsdata[, topic], 
    1:num_lags) + dummy + month, data = tsdata, start = c(2018, 
    1), end = c(2023, 1))

Coefficients:
                   Intercept          economic_acticity.l1          economic_acticity.l2  inflation_expectations_1y.l1  
                   0.1830622                    -0.3989900                    -0.3455902                    -0.0006935  
inflation_expectations_1y.l2  inflation_expectations_3y.l1  inflation_expectations_3y.l2                  inflation.l1  
                  -0.0142263                     0.0055455                    -0.0291625                     1.1514918  
                inflation.l2                       debt.l1                       debt.l2                         dummy  
                  -0.0047018                     2.4230650                    -1.6908283                    -0.0336714  
                      month1                        month2                        month3                        month4  
                   0.0143890                    -0.0030052                    -0.0255959                    -0.1200366  
                      month5                        month6                        month7                        month8  
                  -0.0277812                    -0.0155621                     0.0410191                     0.0402985  
                      month9                       month10                       month11  
                   0.0614894                     0.0390497                    -0.0138859  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept                       debt.l1                       debt.l2          economic_activity.l1  
                  -0.0259831                     0.8745809                    -0.0516232                    -0.0270126  
        economic_activity.l2  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                  -0.0244711                     0.0002057                     0.0018763                     0.0040739  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2                         dummy  
                  -0.0029099                     0.1095287                    -0.0394532                    -0.0100022  
                      month1                        month2                        month3                        month4  
                   0.0162388                     0.0062230                    -0.0094228                     0.0152689  
                      month5                        month6                        month7                        month8  
                   0.0058248                    -0.0090551                     0.0160832                     0.0013003  
                      month9                       month10                       month11  
                   0.0077754                     0.0170515                     0.0108607  

[1] "diagnostics"
[1] "heteroskedasticity"

	ARCH (multivariate)

data:  Residuals of VAR object model
Chi-squared = 473.94, df = 450, p-value = 0.21

[1] "serial correlation"

	Breusch-Godfrey LM test

data:  Residuals of VAR object model
Chi-squared = 208.01, df = 125, p-value = 4.518e-06

[1] "inflation expectations_3y"
Linear hypothesis test

Hypothesis:
debt.l1 = 0
debt.l2 = 0

Model 1: restricted model
Model 2: inflation_expectations_3y ~ L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.4689 0.6294
[1] "inflation expectations_1y"
Linear hypothesis test

Hypothesis:
debt.l1 = 0
debt.l2 = 0

Model 1: restricted model
Model 2: inflation_expectations_1y ~ L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.9625 0.3916
[1] "inflation"
Linear hypothesis test

Hypothesis:
debt.l1 = 0
debt.l2 = 0

Model 1: restricted model
Model 2: inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df     F Pr(>F)
1     38                
2     36  2 1.058 0.3577
[1] "economic_activity"
Linear hypothesis test

Hypothesis:
debt.l1 = 0
debt.l2 = 0

Model 1: restricted model
Model 2: economic_activity ~ L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.4805 0.2411
[1] "feedback effects"
[1] "topic expectations 3y"
Linear hypothesis test

Hypothesis:
inflation_expectations_3y.l1 = 0
inflation_expectations_3y.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.2247 0.7999
[1] "topic expectations_1y"
Linear hypothesis test

Hypothesis:
inflation_expectations_1y.l1 = 0
inflation_expectations_1y.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.2065 0.8144
[1] "topic inflation"
Linear hypothesis test

Hypothesis:
inflation.l1 = 0
inflation.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.2639 0.7695
[1] "topic activitiy"
Linear hypothesis test

Hypothesis:
economic_activity.l1 = 0
economic_activity.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.2675 0.7668
