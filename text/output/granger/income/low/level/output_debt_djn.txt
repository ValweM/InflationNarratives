
Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation_expectations_3y ~ L(inflation_expectations_3y, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_3y.l1  inflation_expectations_3y.l2  inflation_expectations_1y.l1  
                    1.343553                      0.386011                      0.255401                      0.367813  
inflation_expectations_1y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                   -0.371692                      2.822662                     -1.085183                      0.061815  
        economic_activity.l2                       debt.l1                       debt.l2                         dummy  
                    0.557386                      2.035709                      0.187571                      0.066115  
                      month1                        month2                        month3                        month4  
                   -0.408283                     -0.211619                     -0.484828                     -0.110224  
                      month5                        month6                        month7                        month8  
                    0.048170                     -0.195857                     -0.255493                     -0.341124  
                      month9                       month10                       month11  
                   -0.066640                      0.003417                     -0.445296  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation_expectations_1y ~ L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                    0.010107                      0.589722                      0.270980                      0.415034  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                   -0.161905                     -1.212822                     -0.526276                     -0.202224  
        economic_activity.l2                       debt.l1                       debt.l2                         dummy  
                    0.601518                      0.668697                      1.969579                      0.037166  
                      month1                        month2                        month3                        month4  
                   -0.118755                      0.030303                     -0.091739                     -0.156404  
                      month5                        month6                        month7                        month8  
                    0.007054                      0.226696                     -0.079823                     -0.104468  
                      month9                       month10                       month11  
                   -0.089857                      0.009330                     -0.347602  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month, data = tsdata, start = c(2018, 1), end = c(2023, 
    1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                   -0.034564                      0.164860                     -0.325909                      0.026693  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                   -0.012601                      0.027735                     -0.016974                      0.069746  
        economic_activity.l2                       debt.l1                       debt.l2                         dummy  
                    0.049587                      0.352277                     -0.373883                     -0.026686  
                      month1                        month2                        month3                        month4  
                   -0.023983                     -0.004633                     -0.012709                     -0.005380  
                      month5                        month6                        month7                        month8  
                    0.006240                      0.008677                     -0.032564                     -0.014220  
                      month9                       month10                       month11  
                   -0.012737                     -0.009831                     -0.036898  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = economic_activity ~ L(economic_activity, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation_expectations_3y, 
    1:num_lags) + L(inflation, 1:num_lags) + L(tsdata[, topic], 
    1:num_lags) + dummy + month, data = tsdata, start = c(2018, 
    1), end = c(2023, 1))

Coefficients:
                   Intercept          economic_acticity.l1          economic_acticity.l2  inflation_expectations_1y.l1  
                   0.1849574                    -0.3582207                    -0.3399860                     0.0006073  
inflation_expectations_1y.l2  inflation_expectations_3y.l1  inflation_expectations_3y.l2                  inflation.l1  
                  -0.0163072                     0.0203154                    -0.0414517                     1.0149126  
                inflation.l2                       debt.l1                       debt.l2                         dummy  
                   0.0404262                     2.7917065                    -1.9420883                    -0.0423035  
                      month1                        month2                        month3                        month4  
                   0.0082889                    -0.0055080                    -0.0313599                    -0.1024277  
                      month5                        month6                        month7                        month8  
                  -0.0447905                    -0.0120983                     0.0353656                     0.0340385  
                      month9                       month10                       month11  
                   0.0950282                     0.0225333                    -0.0132064  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept                       debt.l1                       debt.l2          economic_activity.l1  
                  -0.0189353                     0.8614428                    -0.0195973                    -0.0256435  
        economic_activity.l2  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                  -0.0299218                    -0.0007572                     0.0028217                     0.0076593  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2                         dummy  
                  -0.0077513                     0.0556857                     0.0250283                    -0.0055714  
                      month1                        month2                        month3                        month4  
                   0.0130064                     0.0057571                    -0.0155351                     0.0190333  
                      month5                        month6                        month7                        month8  
                  -0.0014364                    -0.0085727                     0.0143578                    -0.0144627  
                      month9                       month10                       month11  
                   0.0132866                     0.0114002                     0.0095396  

[1] "diagnostics"
[1] "heteroskedasticity"

	ARCH (multivariate)

data:  Residuals of VAR object model
Chi-squared = 461.65, df = 450, p-value = 0.3419

[1] "serial correlation"

	Breusch-Godfrey LM test

data:  Residuals of VAR object model
Chi-squared = 208.4, df = 125, p-value = 4.16e-06

[1] "inflation expectations_3y"
Linear hypothesis test

Hypothesis:
debt.l1 = 0
debt.l2 = 0

Model 1: restricted model
Model 2: inflation_expectations_3y ~ L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.4432 0.6454
[1] "inflation expectations_1y"
Linear hypothesis test

Hypothesis:
debt.l1 = 0
debt.l2 = 0

Model 1: restricted model
Model 2: inflation_expectations_1y ~ L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.9718 0.3881
[1] "inflation"
Linear hypothesis test

Hypothesis:
debt.l1 = 0
debt.l2 = 0

Model 1: restricted model
Model 2: inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.5326 0.2297
[1] "economic_activity"
Linear hypothesis test

Hypothesis:
debt.l1 = 0
debt.l2 = 0

Model 1: restricted model
Model 2: economic_activity ~ L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.8382 0.1737
[1] "feedback effects"
[1] "topic expectations 3y"
Linear hypothesis test

Hypothesis:
inflation_expectations_3y.l1 = 0
inflation_expectations_3y.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.6276 0.5396
[1] "topic expectations_1y"
Linear hypothesis test

Hypothesis:
inflation_expectations_1y.l1 = 0
inflation_expectations_1y.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.2223 0.8018
[1] "topic inflation"
Linear hypothesis test

Hypothesis:
inflation.l1 = 0
inflation.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.1796 0.8364
[1] "topic activitiy"
Linear hypothesis test

Hypothesis:
economic_activity.l1 = 0
economic_activity.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.2812 0.7565
