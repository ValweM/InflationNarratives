
Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation_expectations_3y ~ L(inflation_expectations_3y, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_3y.l1  inflation_expectations_3y.l2  inflation_expectations_1y.l1  
                     1.41487                       0.32766                       0.26869                       0.40043  
inflation_expectations_1y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                    -0.37510                       2.26640                      -0.87787                       0.13427  
        economic_activity.l2                      taxes.l1                      taxes.l2                         dummy  
                     0.60439                      11.13160                       0.34451                       0.01187  
                      month1                        month2                        month3                        month4  
                    -0.39420                      -0.22200                      -0.44696                      -0.12494  
                      month5                        month6                        month7                        month8  
                     0.10577                      -0.17876                      -0.27977                      -0.35939  
                      month9                       month10                       month11  
                    -0.11030                       0.02760                      -0.46569  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation_expectations_1y ~ L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                    0.212257                      0.592098                      0.297849                      0.345897  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                   -0.148522                     -2.673306                     -0.436253                     -0.181017  
        economic_activity.l2                      taxes.l1                      taxes.l2                         dummy  
                    0.693621                     18.415573                      2.644616                     -0.007939  
                      month1                        month2                        month3                        month4  
                   -0.052646                      0.014201                     -0.027464                     -0.108013  
                      month5                        month6                        month7                        month8  
                    0.064960                      0.291188                     -0.042216                     -0.138466  
                      month9                       month10                       month11  
                   -0.079463                      0.058644                     -0.348365  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month, data = tsdata, start = c(2018, 1), end = c(2023, 
    1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                   -0.019413                      0.218182                     -0.325117                      0.030326  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                   -0.016746                      0.021294                     -0.013415                      0.070092  
        economic_activity.l2                      taxes.l1                      taxes.l2                         dummy  
                    0.035106                      0.658862                     -0.604070                     -0.028176  
                      month1                        month2                        month3                        month4  
                   -0.029833                     -0.005143                     -0.015379                     -0.018427  
                      month5                        month6                        month7                        month8  
                    0.010487                     -0.000942                     -0.041416                     -0.012955  
                      month9                       month10                       month11  
                   -0.023109                     -0.006762                     -0.041198  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = economic_activity ~ L(economic_activity, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation_expectations_3y, 
    1:num_lags) + L(inflation, 1:num_lags) + L(tsdata[, topic], 
    1:num_lags) + dummy + month, data = tsdata, start = c(2018, 
    1), end = c(2023, 1))

Coefficients:
                   Intercept          economic_acticity.l1          economic_acticity.l2  inflation_expectations_1y.l1  
                    0.226123                     -0.289931                     -0.380309                      0.045534  
inflation_expectations_1y.l2  inflation_expectations_3y.l1  inflation_expectations_3y.l2                  inflation.l1  
                   -0.048204                     -0.031287                     -0.018344                      1.185696  
                inflation.l2                      taxes.l1                      taxes.l2                         dummy  
                    0.230158                      5.988864                     -3.730753                     -0.077582  
                      month1                        month2                        month3                        month4  
                   -0.025353                     -0.014009                     -0.032197                     -0.182122  
                      month5                        month6                        month7                        month8  
                    0.001941                     -0.059615                     -0.032529                      0.031964  
                      month9                       month10                       month11  
                    0.015510                      0.037680                     -0.051207  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept                      taxes.l1                      taxes.l2          economic_activity.l1  
                  -0.0084594                     0.3295365                     0.1889833                    -0.0022476  
        economic_activity.l2  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                  -0.0097273                     0.0033211                    -0.0026661                    -0.0002162  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2                         dummy  
                   0.0004356                     0.0356104                    -0.0182709                    -0.0054369  
                      month1                        month2                        month3                        month4  
                   0.0007059                    -0.0006857                    -0.0001724                    -0.0014622  
                      month5                        month6                        month7                        month8  
                   0.0035912                    -0.0005555                     0.0003264                     0.0004093  
                      month9                       month10                       month11  
                  -0.0033906                     0.0048851                    -0.0010831  

[1] "diagnostics"
[1] "heteroskedasticity"

	ARCH (multivariate)

data:  Residuals of VAR object model
Chi-squared = 451.25, df = 450, p-value = 0.4746

[1] "serial correlation"

	Breusch-Godfrey LM test

data:  Residuals of VAR object model
Chi-squared = 215.14, df = 125, p-value = 9.734e-07

[1] "inflation expectations_3y"
Linear hypothesis test

Hypothesis:
taxes.l1 = 0
taxes.l2 = 0

Model 1: restricted model
Model 2: inflation_expectations_3y ~ L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df     F Pr(>F)
1     38                
2     36  2 0.618 0.5447
[1] "inflation expectations_1y"
Linear hypothesis test

Hypothesis:
taxes.l1 = 0
taxes.l2 = 0

Model 1: restricted model
Model 2: inflation_expectations_1y ~ L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 2.0089 0.1489
[1] "inflation"
Linear hypothesis test

Hypothesis:
taxes.l1 = 0
taxes.l2 = 0

Model 1: restricted model
Model 2: inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.6628 0.5216
[1] "economic_activity"
Linear hypothesis test

Hypothesis:
taxes.l1 = 0
taxes.l2 = 0

Model 1: restricted model
Model 2: economic_activity ~ L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.1665  0.323
[1] "feedback effects"
[1] "topic expectations 3y"
Linear hypothesis test

Hypothesis:
inflation_expectations_3y.l1 = 0
inflation_expectations_3y.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.0152 0.9849
[1] "topic expectations_1y"
Linear hypothesis test

Hypothesis:
inflation_expectations_1y.l1 = 0
inflation_expectations_1y.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.4908 0.6162
[1] "topic inflation"
Linear hypothesis test

Hypothesis:
inflation.l1 = 0
inflation.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.3741 0.6906
[1] "topic activitiy"
Linear hypothesis test

Hypothesis:
economic_activity.l1 = 0
economic_activity.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.5126 0.6033
