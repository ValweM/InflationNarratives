
Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation_expectations_3y ~ L(inflation_expectations_3y, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_3y.l1  inflation_expectations_3y.l2  inflation_expectations_1y.l1  
                    1.433449                      0.353328                      0.253830                      0.399575  
inflation_expectations_1y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                   -0.382349                      2.486639                     -1.110353                      0.061791  
        economic_activity.l2                      taxes.l1                      taxes.l2                         dummy  
                    0.676934                      8.975487                      0.112789                      0.077743  
                      month1                        month2                        month3                        month4  
                   -0.394282                     -0.236875                     -0.469297                     -0.131184  
                      month5                        month6                        month7                        month8  
                    0.082733                     -0.206398                     -0.292605                     -0.382201  
                      month9                       month10                       month11  
                   -0.117210                     -0.004692                     -0.478336  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation_expectations_1y ~ L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                   1.794e-01                     6.171e-01                     2.658e-01                     3.827e-01  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                  -1.630e-01                    -2.527e+00                    -6.082e-01                    -2.437e-01  
        economic_activity.l2                      taxes.l1                      taxes.l2                         dummy  
                   8.835e-01                     1.615e+01                    -1.499e+00                     9.572e-02  
                      month1                        month2                        month3                        month4  
                  -5.721e-02                    -3.202e-02                    -6.204e-02                    -1.242e-01  
                      month5                        month6                        month7                        month8  
                   3.486e-02                     2.313e-01                    -7.276e-02                    -1.927e-01  
                      month9                       month10                       month11  
                  -9.381e-02                     7.288e-05                    -3.954e-01  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month, data = tsdata, start = c(2018, 1), end = c(2023, 
    1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                   -0.007909                      0.203083                     -0.357604                      0.029501  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                   -0.016236                      0.021062                     -0.014160                      0.054039  
        economic_activity.l2                      taxes.l1                      taxes.l2                         dummy  
                    0.051013                      1.102896                     -0.728899                     -0.024687  
                      month1                        month2                        month3                        month4  
                   -0.027977                     -0.009416                     -0.014668                     -0.018173  
                      month5                        month6                        month7                        month8  
                    0.008579                     -0.002963                     -0.040447                     -0.015647  
                      month9                       month10                       month11  
                   -0.022322                     -0.006818                     -0.042982  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = economic_activity ~ L(economic_activity, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation_expectations_3y, 
    1:num_lags) + L(inflation, 1:num_lags) + L(tsdata[, topic], 
    1:num_lags) + dummy + month, data = tsdata, start = c(2018, 
    1), end = c(2023, 1))

Coefficients:
                   Intercept          economic_acticity.l1          economic_acticity.l2  inflation_expectations_1y.l1  
                    0.222446                     -0.354869                     -0.249294                      0.053690  
inflation_expectations_1y.l2  inflation_expectations_3y.l1  inflation_expectations_3y.l2                  inflation.l1  
                   -0.053538                     -0.027241                     -0.023336                      1.172295  
                inflation.l2                      taxes.l1                      taxes.l2                         dummy  
                    0.145268                      6.888207                     -5.519032                     -0.066201  
                      month1                        month2                        month3                        month4  
                   -0.021140                     -0.045998                     -0.026665                     -0.182674  
                      month5                        month6                        month7                        month8  
                   -0.009808                     -0.074463                     -0.034746                      0.013487  
                      month9                       month10                       month11  
                    0.017172                      0.028083                     -0.070620  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept                      taxes.l1                      taxes.l2          economic_activity.l1  
                  -0.0056956                     0.4835103                     0.3557653                    -0.0213342  
        economic_activity.l2  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                  -0.0177735                     0.0005645                    -0.0005978                     0.0010067  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2                         dummy  
                  -0.0002847                     0.0804873                    -0.0590906                    -0.0047171  
                      month1                        month2                        month3                        month4  
                   0.0049666                     0.0015364                    -0.0007284                    -0.0003865  
                      month5                        month6                        month7                        month8  
                   0.0056505                     0.0005992                     0.0031642                     0.0030810  
                      month9                       month10                       month11  
                  -0.0013728                     0.0075832                     0.0011267  

[1] "diagnostics"
[1] "heteroskedasticity"

	ARCH (multivariate)

data:  Residuals of VAR object model
Chi-squared = 489.11, df = 450, p-value = 0.09857

[1] "serial correlation"

	Breusch-Godfrey LM test

data:  Residuals of VAR object model
Chi-squared = 207.96, df = 125, p-value = 4.565e-06

[1] "inflation expectations_3y"
Linear hypothesis test

Hypothesis:
taxes.l1 = 0
taxes.l2 = 0

Model 1: restricted model
Model 2: inflation_expectations_3y ~ L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.5467 0.5836
[1] "inflation expectations_1y"
Linear hypothesis test

Hypothesis:
taxes.l1 = 0
taxes.l2 = 0

Model 1: restricted model
Model 2: inflation_expectations_1y ~ L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.9481 0.1573
[1] "inflation"
Linear hypothesis test

Hypothesis:
taxes.l1 = 0
taxes.l2 = 0

Model 1: restricted model
Model 2: inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.2322 0.3037
[1] "economic_activity"
Linear hypothesis test

Hypothesis:
taxes.l1 = 0
taxes.l2 = 0

Model 1: restricted model
Model 2: economic_activity ~ L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.2655 0.2943
[1] "feedback effects"
[1] "topic expectations 3y"
Linear hypothesis test

Hypothesis:
inflation_expectations_3y.l1 = 0
inflation_expectations_3y.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.0771  0.926
[1] "topic expectations_1y"
Linear hypothesis test

Hypothesis:
inflation_expectations_1y.l1 = 0
inflation_expectations_1y.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.0253  0.975
[1] "topic inflation"
Linear hypothesis test

Hypothesis:
inflation.l1 = 0
inflation.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.9235 0.1608
[1] "topic activitiy"
Linear hypothesis test

Hypothesis:
economic_activity.l1 = 0
economic_activity.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.6486 0.2065
