
Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation_expectations_3y ~ L(inflation_expectations_3y, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_3y.l1  inflation_expectations_3y.l2  inflation_expectations_1y.l1  
                     1.83470                       0.31537                       0.16224                       0.32830  
inflation_expectations_1y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                    -0.33008                       2.64672                      -2.07155                       0.33097  
        economic_activity.l2             pent_up_demand.l1             pent_up_demand.l2                         dummy  
                     0.45325                      11.12836                       7.37180                       0.26832  
                      month1                        month2                        month3                        month4  
                    -0.39527                      -0.23485                      -0.51523                      -0.17757  
                      month5                        month6                        month7                        month8  
                    -0.01229                      -0.20937                      -0.25175                      -0.38114  
                      month9                       month10                       month11  
                    -0.10186                      -0.07696                      -0.46751  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation_expectations_1y ~ L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                     0.59935                       0.70341                       0.19643                       0.30528  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                    -0.28193                      -2.22636                      -0.04870                      -0.21548  
        economic_activity.l2             pent_up_demand.l1             pent_up_demand.l2                         dummy  
                     0.28509                      23.90960                      -5.81382                       0.27003  
                      month1                        month2                        month3                        month4  
                    -0.15595                      -0.13857                      -0.05554                      -0.34843  
                      month5                        month6                        month7                        month8  
                    -0.17926                       0.21822                      -0.24511                      -0.20445  
                      month9                       month10                       month11  
                    -0.12505                      -0.16607                      -0.46932  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month, data = tsdata, start = c(2018, 1), end = c(2023, 
    1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                   -0.002859                      0.261644                     -0.252018                      0.039197  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                   -0.023909                      0.019461                     -0.018059                      0.032369  
        economic_activity.l2             pent_up_demand.l1             pent_up_demand.l2                         dummy  
                    0.003907                      1.074315                     -1.087794                     -0.025183  
                      month1                        month2                        month3                        month4  
                   -0.036477                     -0.013618                     -0.011634                     -0.032463  
                      month5                        month6                        month7                        month8  
                   -0.002273                     -0.001475                     -0.057691                     -0.013582  
                      month9                       month10                       month11  
                   -0.026368                     -0.014909                     -0.045740  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = economic_activity ~ L(economic_activity, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation_expectations_3y, 
    1:num_lags) + L(inflation, 1:num_lags) + L(tsdata[, topic], 
    1:num_lags) + dummy + month, data = tsdata, start = c(2018, 
    1), end = c(2023, 1))

Coefficients:
                   Intercept          economic_acticity.l1          economic_acticity.l2  inflation_expectations_1y.l1  
                    0.139429                     -0.313142                     -0.375103                      0.026629  
inflation_expectations_1y.l2  inflation_expectations_3y.l1  inflation_expectations_3y.l2                  inflation.l1  
                   -0.030662                     -0.002135                     -0.032869                      1.751807  
                inflation.l2             pent_up_demand.l1             pent_up_demand.l2                         dummy  
                    0.071559                     -1.181734                      0.455188                     -0.092995  
                      month1                        month2                        month3                        month4  
                   -0.029304                      0.012066                     -0.036318                     -0.165809  
                      month5                        month6                        month7                        month8  
                   -0.003751                     -0.043893                     -0.027119                      0.052986  
                      month9                       month10                       month11  
                    0.014333                      0.029037                     -0.024914  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept             pent_up_demand.l1             pent_up_demand.l2          economic_activity.l1  
                  -0.0064462                     0.3885998                     0.2517909                     0.0260980  
        economic_activity.l2  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                  -0.0205929                     0.0067597                    -0.0071909                     0.0017238  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2                         dummy  
                  -0.0003506                     0.0304997                     0.0609485                    -0.0028460  
                      month1                        month2                        month3                        month4  
                   0.0011487                    -0.0082136                     0.0014061                     0.0021970  
                      month5                        month6                        month7                        month8  
                  -0.0014908                     0.0004299                    -0.0027805                    -0.0029756  
                      month9                       month10                       month11  
                   0.0011908                     0.0041010                    -0.0038312  

[1] "diagnostics"
[1] "heteroskedasticity"

	ARCH (multivariate)

data:  Residuals of VAR object model
Chi-squared = 495.82, df = 450, p-value = 0.06675

[1] "serial correlation"

	Breusch-Godfrey LM test

data:  Residuals of VAR object model
Chi-squared = 216.75, df = 125, p-value = 6.812e-07

[1] "inflation expectations_3y"
Linear hypothesis test

Hypothesis:
pent_up_demand.l1 = 0
pent_up_demand.l2 = 0

Model 1: restricted model
Model 2: inflation_expectations_3y ~ L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 2.4182 0.1034
[1] "inflation expectations_1y"
Linear hypothesis test

Hypothesis:
pent_up_demand.l1 = 0
pent_up_demand.l2 = 0

Model 1: restricted model
Model 2: inflation_expectations_1y ~ L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F   Pr(>F)   
1     38                      
2     36  2 7.6152 0.001746 **
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "inflation"
Linear hypothesis test

Hypothesis:
pent_up_demand.l1 = 0
pent_up_demand.l2 = 0

Model 1: restricted model
Model 2: inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 2.0672 0.1413
[1] "economic_activity"
Linear hypothesis test

Hypothesis:
pent_up_demand.l1 = 0
pent_up_demand.l2 = 0

Model 1: restricted model
Model 2: economic_activity ~ L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.1595 0.8532
[1] "feedback effects"
[1] "topic expectations 3y"
Linear hypothesis test

Hypothesis:
inflation_expectations_3y.l1 = 0
inflation_expectations_3y.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.0797 0.9236
[1] "topic expectations_1y"
Linear hypothesis test

Hypothesis:
inflation_expectations_1y.l1 = 0
inflation_expectations_1y.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 2.2835 0.1165
[1] "topic inflation"
Linear hypothesis test

Hypothesis:
inflation.l1 = 0
inflation.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.2117 0.3096
[1] "topic activitiy"
Linear hypothesis test

Hypothesis:
economic_activity.l1 = 0
economic_activity.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df     F    Pr(>F)    
1     38                       
2     36  2 10.19 0.0003114 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
