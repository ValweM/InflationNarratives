
Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation_expectations_3y ~ L(inflation_expectations_3y, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_3y.l1  inflation_expectations_3y.l2  inflation_expectations_1y.l1  
                     1.49343                       0.34835                       0.20304                       0.36178  
inflation_expectations_1y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                    -0.35776                       3.66634                      -1.66211                       0.28393  
        economic_activity.l2             pent_up_demand.l1             pent_up_demand.l2                         dummy  
                     0.51949                      -0.92063                       3.33753                       0.11758  
                      month1                        month2                        month3                        month4  
                    -0.43589                      -0.14785                      -0.48837                      -0.19875  
                      month5                        month6                        month7                        month8  
                     0.05854                      -0.23320                      -0.30530                      -0.35218  
                      month9                       month10                       month11  
                    -0.12004                      -0.04809                      -0.44897  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation_expectations_1y ~ L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                    -0.06682                       0.56649                       0.32278                       0.39918  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                    -0.18356                      -1.84224                      -1.08161                      -0.13428  
        economic_activity.l2             pent_up_demand.l1             pent_up_demand.l2                         dummy  
                     0.76631                       2.75325                      -0.35302                       0.08608  
                      month1                        month2                        month3                        month4  
                    -0.05911                       0.04800                      -0.10246                      -0.14177  
                      month5                        month6                        month7                        month8  
                    -0.01813                       0.25054                      -0.07465                      -0.12525  
                      month9                       month10                       month11  
                    -0.10310                      -0.04754                      -0.36393  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month, data = tsdata, start = c(2018, 1), end = c(2023, 
    1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                   -0.037575                      0.166683                     -0.373904                      0.024397  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                   -0.009854                      0.024956                     -0.011467                      0.033329  
        economic_activity.l2             pent_up_demand.l1             pent_up_demand.l2                         dummy  
                    0.043399                      0.466635                     -0.478460                     -0.028727  
                      month1                        month2                        month3                        month4  
                   -0.022437                     -0.007100                     -0.018645                     -0.011106  
                      month5                        month6                        month7                        month8  
                    0.004064                      0.004465                     -0.038180                     -0.008928  
                      month9                       month10                       month11  
                   -0.023081                     -0.006994                     -0.039134  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = economic_activity ~ L(economic_activity, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation_expectations_3y, 
    1:num_lags) + L(inflation, 1:num_lags) + L(tsdata[, topic], 
    1:num_lags) + dummy + month, data = tsdata, start = c(2018, 
    1), end = c(2023, 1))

Coefficients:
                   Intercept          economic_acticity.l1          economic_acticity.l2  inflation_expectations_1y.l1  
                    0.116255                     -0.437528                     -0.353149                      0.018471  
inflation_expectations_1y.l2  inflation_expectations_3y.l1  inflation_expectations_3y.l2                  inflation.l1  
                   -0.017472                     -0.004127                     -0.020674                      1.270064  
                inflation.l2             pent_up_demand.l1             pent_up_demand.l2                         dummy  
                   -0.011450                      1.816232                     -1.810396                     -0.079556  
                      month1                        month2                        month3                        month4  
                   -0.002396                     -0.013168                     -0.048245                     -0.153927  
                      month5                        month6                        month7                        month8  
                   -0.031738                     -0.035068                     -0.024503                      0.054966  
                      month9                       month10                       month11  
                    0.013137                      0.025265                     -0.035746  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept             pent_up_demand.l1             pent_up_demand.l2          economic_activity.l1  
                   -0.019147                      1.187160                     -0.324698                     -0.046952  
        economic_activity.l2  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                    0.009599                     -0.006732                      0.007666                      0.006259  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2                         dummy  
                   -0.004342                      0.237241                     -0.197042                     -0.013757  
                      month1                        month2                        month3                        month4  
                    0.015405                      0.023968                     -0.001800                      0.017953  
                      month5                        month6                        month7                        month8  
                    0.010731                      0.014423                      0.002695                      0.019569  
                      month9                       month10                       month11  
                    0.010097                      0.017911                      0.001749  

[1] "diagnostics"
[1] "heteroskedasticity"

	ARCH (multivariate)

data:  Residuals of VAR object model
Chi-squared = 457.08, df = 450, p-value = 0.3987

[1] "serial correlation"

	Breusch-Godfrey LM test

data:  Residuals of VAR object model
Chi-squared = 215.04, df = 125, p-value = 9.95e-07

[1] "inflation expectations_3y"
Linear hypothesis test

Hypothesis:
pent_up_demand.l1 = 0
pent_up_demand.l2 = 0

Model 1: restricted model
Model 2: inflation_expectations_3y ~ L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df     F Pr(>F)
1     38                
2     36  2 2.286 0.1162
[1] "inflation expectations_1y"
Linear hypothesis test

Hypothesis:
pent_up_demand.l1 = 0
pent_up_demand.l2 = 0

Model 1: restricted model
Model 2: inflation_expectations_1y ~ L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.6383 0.2085
[1] "inflation"
Linear hypothesis test

Hypothesis:
pent_up_demand.l1 = 0
pent_up_demand.l2 = 0

Model 1: restricted model
Model 2: inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df     F  Pr(>F)  
1     38                   
2     36  2 2.853 0.07077 .
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "economic_activity"
Linear hypothesis test

Hypothesis:
pent_up_demand.l1 = 0
pent_up_demand.l2 = 0

Model 1: restricted model
Model 2: economic_activity ~ L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.3396 0.2747
[1] "feedback effects"
[1] "topic expectations 3y"
Linear hypothesis test

Hypothesis:
inflation_expectations_3y.l1 = 0
inflation_expectations_3y.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.3492 0.7076
[1] "topic expectations_1y"
Linear hypothesis test

Hypothesis:
inflation_expectations_1y.l1 = 0
inflation_expectations_1y.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.3622 0.6987
[1] "topic inflation"
Linear hypothesis test

Hypothesis:
inflation.l1 = 0
inflation.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F  Pr(>F)  
1     38                    
2     36  2 3.0702 0.05873 .
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "topic activitiy"
Linear hypothesis test

Hypothesis:
economic_activity.l1 = 0
economic_activity.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.1552 0.3264
