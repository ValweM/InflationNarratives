
Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation_expectations_3y ~ L(inflation_expectations_3y, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_3y.l1  inflation_expectations_3y.l2  inflation_expectations_1y.l1  
                     1.37627                       0.35469                       0.26269                       0.39439  
inflation_expectations_1y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                    -0.39332                       2.87075                      -0.80226                       0.12627  
        economic_activity.l2                   politics.l1                   politics.l2                         dummy  
                     0.57540                       2.52681                       1.17350                      -0.06968  
                      month1                        month2                        month3                        month4  
                    -0.40790                      -0.22061                      -0.46684                      -0.13858  
                      month5                        month6                        month7                        month8  
                     0.05306                      -0.18523                      -0.28712                      -0.31293  
                      month9                       month10                       month11  
                    -0.09238                       0.02373                      -0.45855  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation_expectations_1y ~ L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                    -0.05966                       0.62596                       0.25160                       0.39831  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                    -0.16123                      -1.60356                      -0.06396                      -0.07326  
        economic_activity.l2                   politics.l1                   politics.l2                         dummy  
                     0.72248                       1.46489                       2.03651                      -0.09393  
                      month1                        month2                        month3                        month4  
                    -0.09689                       0.02151                      -0.05856                      -0.13265  
                      month5                        month6                        month7                        month8  
                     0.01703                       0.26172                      -0.08446                      -0.09878  
                      month9                       month10                       month11  
                    -0.08156                       0.01921                      -0.35888  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month, data = tsdata, start = c(2018, 1), end = c(2023, 
    1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                   -0.010510                      0.281820                     -0.362372                      0.025628  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                   -0.013923                      0.023461                     -0.015686                      0.056736  
        economic_activity.l2                   politics.l1                   politics.l2                         dummy  
                    0.027208                      0.110801                      0.039592                     -0.031010  
                      month1                        month2                        month3                        month4  
                   -0.029390                     -0.002639                     -0.015967                     -0.017798  
                      month5                        month6                        month7                        month8  
                    0.006422                      0.001212                     -0.039958                     -0.008583  
                      month9                       month10                       month11  
                   -0.021641                     -0.006184                     -0.036903  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = economic_activity ~ L(economic_activity, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation_expectations_3y, 
    1:num_lags) + L(inflation, 1:num_lags) + L(tsdata[, topic], 
    1:num_lags) + dummy + month, data = tsdata, start = c(2018, 
    1), end = c(2023, 1))

Coefficients:
                   Intercept          economic_acticity.l1          economic_acticity.l2  inflation_expectations_1y.l1  
                     0.25407                      -0.37012                      -0.43213                       0.02190  
inflation_expectations_1y.l2  inflation_expectations_3y.l1  inflation_expectations_3y.l2                  inflation.l1  
                    -0.03561                      -0.01318                      -0.03787                       1.88524  
                inflation.l2                   politics.l1                   politics.l2                         dummy  
                    -0.02324                      -0.87510                       1.89417                      -0.09304  
                      month1                        month2                        month3                        month4  
                    -0.03452                       0.02208                      -0.04286                      -0.18357  
                      month5                        month6                        month7                        month8  
                    -0.01718                      -0.06901                      -0.03432                       0.06135  
                      month9                       month10                       month11  
                     0.01539                       0.04142                      -0.01854  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept                   politics.l1                   politics.l2          economic_activity.l1  
                  -0.0186675                     0.8274467                     0.0369444                    -0.0027673  
        economic_activity.l2  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                  -0.0075669                    -0.0040476                     0.0042538                     0.0033766  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2                         dummy  
                   0.0007132                     0.0463577                    -0.0671991                     0.0028612  
                      month1                        month2                        month3                        month4  
                   0.0102575                     0.0035325                     0.0024251                     0.0115077  
                      month5                        month6                        month7                        month8  
                  -0.0064247                    -0.0005316                     0.0019854                    -0.0009518  
                      month9                       month10                       month11  
                   0.0072805                     0.0075113                     0.0018620  

[1] "diagnostics"
[1] "heteroskedasticity"

	ARCH (multivariate)

data:  Residuals of VAR object model
Chi-squared = 483.8, df = 450, p-value = 0.131

[1] "serial correlation"

	Breusch-Godfrey LM test

data:  Residuals of VAR object model
Chi-squared = 212.38, df = 125, p-value = 1.778e-06

[1] "inflation expectations_3y"
Linear hypothesis test

Hypothesis:
politics.l1 = 0
politics.l2 = 0

Model 1: restricted model
Model 2: inflation_expectations_3y ~ L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.8582 0.4324
[1] "inflation expectations_1y"
Linear hypothesis test

Hypothesis:
politics.l1 = 0
politics.l2 = 0

Model 1: restricted model
Model 2: inflation_expectations_1y ~ L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.0277 0.3681
[1] "inflation"
Linear hypothesis test

Hypothesis:
politics.l1 = 0
politics.l2 = 0

Model 1: restricted model
Model 2: inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.3245  0.725
[1] "economic_activity"
Linear hypothesis test

Hypothesis:
politics.l1 = 0
politics.l2 = 0

Model 1: restricted model
Model 2: economic_activity ~ L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.6015 0.2156
[1] "feedback effects"
[1] "topic expectations 3y"
Linear hypothesis test

Hypothesis:
inflation_expectations_3y.l1 = 0
inflation_expectations_3y.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.9755 0.3867
[1] "topic expectations_1y"
Linear hypothesis test

Hypothesis:
inflation_expectations_1y.l1 = 0
inflation_expectations_1y.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.6602 0.5229
[1] "topic inflation"
Linear hypothesis test

Hypothesis:
inflation.l1 = 0
inflation.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.5752 0.5677
[1] "topic activitiy"
Linear hypothesis test

Hypothesis:
economic_activity.l1 = 0
economic_activity.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.1798 0.8362
