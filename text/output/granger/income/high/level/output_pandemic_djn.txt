
Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation_expectations_3y ~ L(inflation_expectations_3y, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_3y.l1  inflation_expectations_3y.l2  inflation_expectations_1y.l1  
                    0.486920                      0.519776                      0.309354                      0.243290  
inflation_expectations_1y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                   -0.199815                     -1.222006                     -0.994544                      0.369709  
        economic_activity.l2                   pandemic.l1                   pandemic.l2                         dummy  
                    0.638832                      0.478243                     -0.746883                     -0.079122  
                      month1                        month2                        month3                        month4  
                   -0.250450                     -0.031940                     -0.007447                     -0.053464  
                      month5                        month6                        month7                        month8  
                    0.005937                     -0.107516                     -0.306582                     -0.012089  
                      month9                       month10                       month11  
                   -0.118827                     -0.124922                     -0.148358  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation_expectations_1y ~ L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                     0.08405                       0.61919                       0.29275                       0.34834  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                    -0.28841                       3.01945                       1.19978                      -0.33082  
        economic_activity.l2                   pandemic.l1                   pandemic.l2                         dummy  
                    -0.26951                      -0.10637                       0.30802                      -0.01302  
                      month1                        month2                        month3                        month4  
                    -0.17058                      -0.02366                       0.05260                      -0.04395  
                      month5                        month6                        month7                        month8  
                     0.05370                       0.14723                      -0.18997                      -0.11763  
                      month9                       month10                       month11  
                    -0.10270                      -0.04296                       0.02159  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month, data = tsdata, start = c(2018, 1), end = c(2023, 
    1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                   -0.025773                      0.306770                     -0.148781                     -0.011784  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                    0.020247                      0.036851                     -0.023783                      0.007071  
        economic_activity.l2                   pandemic.l1                   pandemic.l2                         dummy  
                    0.013180                      0.859024                     -0.655998                      0.023448  
                      month1                        month2                        month3                        month4  
                   -0.022396                      0.005063                     -0.010379                     -0.003802  
                      month5                        month6                        month7                        month8  
                   -0.002247                      0.011048                     -0.027350                     -0.014297  
                      month9                       month10                       month11  
                   -0.021939                      0.001458                     -0.024174  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = economic_activity ~ L(economic_activity, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation_expectations_3y, 
    1:num_lags) + L(inflation, 1:num_lags) + L(tsdata[, topic], 
    1:num_lags) + dummy + month, data = tsdata, start = c(2018, 
    1), end = c(2023, 1))

Coefficients:
                   Intercept          economic_acticity.l1          economic_acticity.l2  inflation_expectations_1y.l1  
                   0.0920715                    -0.4635183                    -0.1739555                     0.0534009  
inflation_expectations_1y.l2  inflation_expectations_3y.l1  inflation_expectations_3y.l2                  inflation.l1  
                  -0.0434274                    -0.0458279                     0.0186767                     0.4307886  
                inflation.l2                   pandemic.l1                   pandemic.l2                         dummy  
                  -0.2062424                     4.9494962                    -3.6489075                     0.1813880  
                      month1                        month2                        month3                        month4  
                   0.0004903                     0.0261563                     0.0073497                    -0.0777579  
                      month5                        month6                        month7                        month8  
                  -0.0383771                     0.0097041                    -0.0089834                     0.0127665  
                      month9                       month10                       month11  
                   0.0185467                     0.0222565                    -0.0113232  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept                   pandemic.l1                   pandemic.l2          economic_activity.l1  
                  -0.0676465                     1.2766933                    -0.4344678                    -0.0394112  
        economic_activity.l2  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                  -0.0143682                    -0.0125602                     0.0077107                     0.0181766  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2                         dummy  
                   0.0143518                     0.0371993                    -0.0776490                     0.0012946  
                      month1                        month2                        month3                        month4  
                  -0.0084153                    -0.0181364                    -0.0265655                     0.0012865  
                      month5                        month6                        month7                        month8  
                  -0.0200548                    -0.0039546                    -0.0073016                     0.0005841  
                      month9                       month10                       month11  
                  -0.0135836                     0.0020666                    -0.0081919  

[1] "diagnostics"
[1] "heteroskedasticity"

	ARCH (multivariate)

data:  Residuals of VAR object model
Chi-squared = 473.12, df = 450, p-value = 0.2177

[1] "serial correlation"

	Breusch-Godfrey LM test

data:  Residuals of VAR object model
Chi-squared = 233.27, df = 125, p-value = 1.488e-08

[1] "inflation expectations_3y"
Linear hypothesis test

Hypothesis:
pandemic.l1 = 0
pandemic.l2 = 0

Model 1: restricted model
Model 2: inflation_expectations_3y ~ L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.1507 0.8606
[1] "inflation expectations_1y"
Linear hypothesis test

Hypothesis:
pandemic.l1 = 0
pandemic.l2 = 0

Model 1: restricted model
Model 2: inflation_expectations_1y ~ L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.0219 0.9783
[1] "inflation"
Linear hypothesis test

Hypothesis:
pandemic.l1 = 0
pandemic.l2 = 0

Model 1: restricted model
Model 2: inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F   Pr(>F)   
1     38                      
2     36  2 8.2566 0.001118 **
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "economic_activity"
Linear hypothesis test

Hypothesis:
pandemic.l1 = 0
pandemic.l2 = 0

Model 1: restricted model
Model 2: economic_activity ~ L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F   Pr(>F)   
1     38                      
2     36  2 6.3339 0.004397 **
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "feedback effects"
[1] "topic expectations 3y"
Linear hypothesis test

Hypothesis:
inflation_expectations_3y.l1 = 0
inflation_expectations_3y.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.2562 0.2969
[1] "topic expectations_1y"
Linear hypothesis test

Hypothesis:
inflation_expectations_1y.l1 = 0
inflation_expectations_1y.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.4864 0.6188
[1] "topic inflation"
Linear hypothesis test

Hypothesis:
inflation.l1 = 0
inflation.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.2858 0.7531
[1] "topic activitiy"
Linear hypothesis test

Hypothesis:
economic_activity.l1 = 0
economic_activity.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.9819 0.3844
