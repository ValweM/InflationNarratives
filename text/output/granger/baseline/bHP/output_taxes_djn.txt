
Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = inflation_expectations_3y ~ L(inflation_expectations_3y, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_3y.l1  inflation_expectations_1y.l1                  inflation.l1  
                     0.07716                       0.59871                      -0.04033                       0.65873  
        economic_activity.l1                      taxes.l1                         dummy                        month1  
                    -0.07127                      -1.11048                      -0.04312                      -0.18668  
                      month2                        month3                        month4                        month5  
                    -0.07473                      -0.11231                      -0.03064                      -0.01025  
                      month6                        month7                        month8                        month9  
                    -0.09709                      -0.11880                      -0.03265                      -0.06927  
                     month10                       month11  
                    -0.02207                      -0.08322  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = inflation_expectations_1y ~ L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_3y.l1                  inflation.l1  
                    -0.05231                       0.51871                       0.40175                       0.68764  
        economic_activity.l1                      taxes.l1                         dummy                        month1  
                    -0.58559                       3.07253                      -0.05186                      -0.10345  
                      month2                        month3                        month4                        month5  
                     0.03461                       0.11897                       0.02354                       0.12140  
                      month6                        month7                        month8                        month9  
                     0.23066                       0.05148                       0.05694                       0.03138  
                     month10                       month11  
                     0.14486                      -0.03342  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month, data = tsdata, start = c(2018, 1), end = c(2023, 
    1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_3y.l1                  inflation.l1  
                   0.0005784                     0.2720448                    -0.0243345                     0.0512810  
        economic_activity.l1                      taxes.l1                         dummy                        month1  
                   0.0258785                     0.0159197                    -0.0292045                    -0.0136342  
                      month2                        month3                        month4                        month5  
                   0.0067686                     0.0030236                    -0.0044299                     0.0169713  
                      month6                        month7                        month8                        month9  
                   0.0244836                    -0.0123547                     0.0063439                    -0.0040825  
                     month10                       month11  
                   0.0136645                    -0.0136396  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = economic_activity ~ L(economic_activity, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation_expectations_3y, 
    1:num_lags) + L(inflation, 1:num_lags) + L(tsdata[, topic], 
    1:num_lags) + dummy + month, data = tsdata, start = c(2018, 
    1), end = c(2023, 1))

Coefficients:
                   Intercept          economic_acticity.l1  inflation_expectations_1y.l1  inflation_expectations_3y.l1  
                  -0.0012277                    -0.2531998                    -0.0188091                     0.0106505  
                inflation.l1                      taxes.l1                         dummy                        month1  
                   0.6845778                     4.6168798                    -0.0390865                     0.0002822  
                      month2                        month3                        month4                        month5  
                   0.0094941                    -0.0055307                    -0.1405308                     0.0291700  
                      month6                        month7                        month8                        month9  
                   0.0432350                     0.0158889                     0.0341485                     0.0413283  
                     month10                       month11  
                   0.0406310                    -0.0050902  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept                      taxes.l1          economic_activity.l1  inflation_expectations_1y.l1  
                   0.0012789                    -0.1811099                     0.0036930                    -0.0007968  
inflation_expectations_3y.l1                  inflation.l1                         dummy                        month1  
                  -0.0005442                     0.0475042                    -0.0056923                     0.0004867  
                      month2                        month3                        month4                        month5  
                  -0.0010623                    -0.0027291                    -0.0027267                     0.0027588  
                      month6                        month7                        month8                        month9  
                  -0.0014328                     0.0003044                    -0.0012806                    -0.0039063  
                     month10                       month11  
                   0.0014929                    -0.0006737  

[1] "diagnostics"
[1] "heteroskedasticity"

	ARCH (multivariate)

data:  Residuals of VAR object model
Chi-squared = 217.92, df = 225, p-value = 0.6201

[1] "serial correlation"

	Breusch-Godfrey LM test

data:  Residuals of VAR object model
Chi-squared = 182.23, df = 125, p-value = 0.0006397

[1] "inflation expectations_3y"
Linear hypothesis test

Hypothesis:
taxes.l1 = 0

Model 1: restricted model
Model 2: inflation_expectations_3y ~ L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 0.0473 0.8288
[1] "inflation expectations_1y"
Linear hypothesis test

Hypothesis:
taxes.l1 = 0

Model 1: restricted model
Model 2: inflation_expectations_1y ~ L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 0.1941 0.6618
[1] "inflation"
Linear hypothesis test

Hypothesis:
taxes.l1 = 0

Model 1: restricted model
Model 2: inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df     F Pr(>F)
1     43                
2     42  1 6e-04 0.9814
[1] "economic_activity"
Linear hypothesis test

Hypothesis:
taxes.l1 = 0

Model 1: restricted model
Model 2: economic_activity ~ L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 0.8098 0.3733
[1] "feedback effects"
[1] "topic expectations 3y"
Linear hypothesis test

Hypothesis:
inflation_expectations_3y.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 0.0153  0.902
[1] "topic expectations_1y"
Linear hypothesis test

Hypothesis:
inflation_expectations_1y.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df     F Pr(>F)
1     43                
2     42  1 0.058 0.8109
[1] "topic inflation"
Linear hypothesis test

Hypothesis:
inflation.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 2.4915  0.122
[1] "topic activitiy"
Linear hypothesis test

Hypothesis:
economic_activity.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 0.2509 0.6191
