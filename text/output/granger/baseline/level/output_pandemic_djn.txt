
Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation_expectations_3y ~ L(inflation_expectations_3y, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_3y.l1  inflation_expectations_3y.l2  inflation_expectations_1y.l1  inflation_expectations_1y.l2  
                    0.227782                      0.902888                      0.039034                      0.188568                     -0.176419  
                inflation.l1                  inflation.l2          economic_activity.l1          economic_activity.l2                   pandemic.l1  
                   -0.065906                     -1.728383                      0.312763                      0.722833                      0.003060  
                 pandemic.l2                         dummy                        month1                        month2                        month3  
                   -0.213446                     -0.042542                     -0.227275                     -0.009462                     -0.089517  
                      month4                        month5                        month6                        month7                        month8  
                   -0.012817                      0.062991                     -0.080438                     -0.180961                     -0.010960  
                      month9                       month10                       month11  
                   -0.096363                     -0.049147                     -0.141635  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation_expectations_1y ~ L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  inflation_expectations_3y.l2  
                    -0.68107                       0.57478                       0.32413                       0.90644                      -0.55903  
                inflation.l1                  inflation.l2          economic_activity.l1          economic_activity.l2                   pandemic.l1  
                     1.64842                      -0.95831                      -0.29930                       0.53703                      -1.27639  
                 pandemic.l2                         dummy                        month1                        month2                        month3  
                     0.80003                      -0.07672                      -0.13216                       0.07028                       0.06402  
                      month4                        month5                        month6                        month7                        month8  
                    -0.01354                       0.10748                       0.22707                      -0.03605                      -0.01873  
                      month9                       month10                       month11  
                    -0.06639                       0.07455                      -0.08543  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month, data = tsdata, start = c(2018, 1), end = c(2023, 
    1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  inflation_expectations_3y.l2  
                  -0.0728095                     0.2021373                    -0.3270358                     0.0018985                     0.0089915  
                inflation.l1                  inflation.l2          economic_activity.l1          economic_activity.l2                   pandemic.l1  
                   0.0651565                    -0.0389437                     0.0394817                     0.0344218                     0.5414995  
                 pandemic.l2                         dummy                        month1                        month2                        month3  
                  -0.4439913                     0.0112782                    -0.0173676                     0.0119953                    -0.0014416  
                      month4                        month5                        month6                        month7                        month8  
                  -0.0004366                     0.0054158                     0.0145162                    -0.0279832                    -0.0041961  
                      month9                       month10                       month11  
                  -0.0224931                     0.0039007                    -0.0230582  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = economic_activity ~ L(economic_activity, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation_expectations_3y, 
    1:num_lags) + L(inflation, 1:num_lags) + L(tsdata[, topic], 
    1:num_lags) + dummy + month, data = tsdata, start = c(2018, 
    1), end = c(2023, 1))

Coefficients:
                   Intercept          economic_acticity.l1          economic_acticity.l2  inflation_expectations_1y.l1  inflation_expectations_1y.l2  
                   1.205e-01                    -3.676e-01                    -2.883e-01                    -1.376e-05                     1.074e-02  
inflation_expectations_3y.l1  inflation_expectations_3y.l2                  inflation.l1                  inflation.l2                   pandemic.l1  
                   3.676e-02                    -7.425e-02                     5.044e-01                    -1.039e-01                     4.066e+00  
                 pandemic.l2                         dummy                        month1                        month2                        month3  
                  -2.733e+00                     2.632e-01                    -4.262e-03                     3.770e-02                     3.064e-03  
                      month4                        month5                        month6                        month7                        month8  
                  -7.940e-02                    -3.440e-02                     1.133e-02                    -3.355e-03                     1.557e-02  
                      month9                       month10                       month11  
                  -7.788e-03                     1.599e-02                    -6.430e-03  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept                   pandemic.l1                   pandemic.l2          economic_activity.l1          economic_activity.l2  
                  -0.0481583                     1.1607726                    -0.2982571                    -0.0057839                    -0.0406816  
inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  inflation_expectations_3y.l2                  inflation.l1  
                  -0.0007478                    -0.0006217                     0.0053280                     0.0150466                     0.0429639  
                inflation.l2                         dummy                        month1                        month2                        month3  
                  -0.1525166                    -0.0032536                    -0.0053618                    -0.0231038                    -0.0263876  
                      month4                        month5                        month6                        month7                        month8  
                   0.0059739                    -0.0135637                     0.0045021                    -0.0105827                     0.0151479  
                      month9                       month10                       month11  
                  -0.0172443                     0.0066988                    -0.0028413  

[1] "diagnostics"
[1] "heteroskedasticity"

	ARCH (multivariate)

data:  Residuals of VAR object model
Chi-squared = 507.31, df = 450, p-value = 0.03168

[1] "serial correlation"

	Breusch-Godfrey LM test

data:  Residuals of VAR object model
Chi-squared = 217.73, df = 125, p-value = 5.477e-07

[1] "inflation expectations_3y"

Linear hypothesis test:
pandemic.l1 = 0
pandemic.l2 = 0

Model 1: restricted model
Model 2: inflation_expectations_3y ~ L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.0656 0.9366
[1] "inflation expectations_1y"

Linear hypothesis test:
pandemic.l1 = 0
pandemic.l2 = 0

Model 1: restricted model
Model 2: inflation_expectations_1y ~ L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.2765   0.76
[1] "inflation"

Linear hypothesis test:
pandemic.l1 = 0
pandemic.l2 = 0

Model 1: restricted model
Model 2: inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F   Pr(>F)   
1     38                      
2     36  2 6.9257 0.002853 **
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "economic_activity"

Linear hypothesis test:
pandemic.l1 = 0
pandemic.l2 = 0

Model 1: restricted model
Model 2: economic_activity ~ L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F   Pr(>F)   
1     38                      
2     36  2 6.4442 0.004053 **
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "feedback effects"
[1] "topic expectations 3y"

Linear hypothesis test:
inflation_expectations_3y.l1 = 0
inflation_expectations_3y.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.7112 0.4978
[1] "topic expectations_1y"

Linear hypothesis test:
inflation_expectations_1y.l1 = 0
inflation_expectations_1y.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.0466 0.9545
[1] "topic inflation"

Linear hypothesis test:
inflation.l1 = 0
inflation.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.2939 0.7471
[1] "topic activitiy"

Linear hypothesis test:
economic_activity.l1 = 0
economic_activity.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.2806  0.757
