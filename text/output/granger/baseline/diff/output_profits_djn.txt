
Time series regression with "ts" data:
Start = 2018(2), End = 2022(12)

Call:
dynlm(formula = inflation_expectations_3y ~ L(inflation_expectations_3y, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_3y.l1  inflation_expectations_1y.l1                  inflation.l1          economic_activity.l1  
                    -0.11818                      -0.07535                       0.12399                      -0.41989                      -0.10281  
                  profits.l1                         dummy                        month1                        month2                        month3  
                     4.53781                      -0.02357                       0.10224                       0.11676                       0.21346  
                      month4                        month5                        month6                        month7                        month8  
                     0.18010                       0.10724                       0.08031                       0.14972                       0.14158  
                      month9                       month10                       month11  
                     0.18961                       0.06814                       0.22984  


Time series regression with "ts" data:
Start = 2018(2), End = 2022(12)

Call:
dynlm(formula = inflation_expectations_1y ~ L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_3y.l1                  inflation.l1          economic_activity.l1  
                    -0.11274                      -0.16603                       0.63468                       1.55456                      -0.76051  
                  profits.l1                         dummy                        month1                        month2                        month3  
                     6.51806                      -0.05578                       0.11039                       0.19675                       0.14114  
                      month4                        month5                        month6                        month7                        month8  
                     0.15056                       0.35004                       0.06106                       0.05169                       0.05367  
                      month9                       month10                       month11  
                     0.22806                      -0.02854                       0.16055  


Time series regression with "ts" data:
Start = 2018(2), End = 2022(12)

Call:
dynlm(formula = inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month, data = tsdata, start = c(2018, 1), end = c(2023, 
    1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_3y.l1                  inflation.l1          economic_activity.l1  
                    0.009076                      0.625439                     -0.012073                      0.045436                     -0.022814  
                  profits.l1                         dummy                        month1                        month2                        month3  
                    0.415663                     -0.023789                      0.015617                      0.004730                      0.001960  
                      month4                        month5                        month6                        month7                        month8  
                    0.017315                      0.035248                     -0.011744                      0.011251                      0.004565  
                      month9                       month10                       month11  
                    0.025020                     -0.009110                      0.018985  


Time series regression with "ts" data:
Start = 2018(2), End = 2022(12)

Call:
dynlm(formula = economic_activity ~ L(economic_activity, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation_expectations_3y, 
    1:num_lags) + L(inflation, 1:num_lags) + L(tsdata[, topic], 
    1:num_lags) + dummy + month, data = tsdata, start = c(2018, 
    1), end = c(2023, 1))

Coefficients:
                   Intercept          economic_acticity.l1  inflation_expectations_1y.l1  inflation_expectations_3y.l1                  inflation.l1  
                   0.0075142                    -0.0963628                     0.0034554                     0.1140414                     0.7222963  
                  profits.l1                         dummy                        month1                        month2                        month3  
                  -1.0826206                    -0.0446353                     0.0510072                    -0.0073433                    -0.1517193  
                      month4                        month5                        month6                        month7                        month8  
                   0.0418161                     0.0282567                     0.0061969                     0.0568175                     0.0246273  
                      month9                       month10                       month11  
                   0.0281640                     0.0051898                    -0.0001945  


Time series regression with "ts" data:
Start = 2018(2), End = 2022(12)

Call:
dynlm(formula = tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept                    profits.l1          economic_activity.l1  inflation_expectations_1y.l1  inflation_expectations_3y.l1  
                   0.0091951                    -0.3814963                     0.0319807                     0.0118648                    -0.0009314  
                inflation.l1                         dummy                        month1                        month2                        month3  
                  -0.0383025                    -0.0009413                    -0.0012723                    -0.0133838                    -0.0092146  
                      month4                        month5                        month6                        month7                        month8  
                  -0.0125302                    -0.0156140                    -0.0054123                    -0.0060605                    -0.0108003  
                      month9                       month10                       month11  
                  -0.0027848                    -0.0158698                    -0.0140235  

[1] "diagnostics"
[1] "heteroskedasticity"

	ARCH (multivariate)

data:  Residuals of VAR object model
Chi-squared = 235.99, df = 225, p-value = 0.2942

[1] "serial correlation"

	Breusch-Godfrey LM test

data:  Residuals of VAR object model
Chi-squared = 210.87, df = 125, p-value = 2.461e-06

[1] "inflation expectations_3y"

Linear hypothesis test:
profits.l1 = 0

Model 1: restricted model
Model 2: inflation_expectations_3y ~ L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F  Pr(>F)  
1     42                    
2     41  1 3.1781 0.08204 .
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "inflation expectations_1y"

Linear hypothesis test:
profits.l1 = 0

Model 1: restricted model
Model 2: inflation_expectations_1y ~ L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)  
1     42                   
2     41  1 3.6873 0.0618 .
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "inflation"

Linear hypothesis test:
profits.l1 = 0

Model 1: restricted model
Model 2: inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     42                 
2     41  1 0.9982 0.3236
[1] "economic_activity"

Linear hypothesis test:
profits.l1 = 0

Model 1: restricted model
Model 2: economic_activity ~ L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     42                 
2     41  1 0.6068 0.4405
[1] "feedback effects"
[1] "topic expectations 3y"

Linear hypothesis test:
inflation_expectations_3y.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     42                 
2     41  1 0.0048 0.9452
[1] "topic expectations_1y"

Linear hypothesis test:
inflation_expectations_1y.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     42                 
2     41  1 2.3311 0.1345
[1] "topic inflation"

Linear hypothesis test:
inflation.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     42                 
2     41  1 0.3585 0.5526
[1] "topic activitiy"

Linear hypothesis test:
economic_activity.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     42                 
2     41  1 2.7977  0.102
