
Time series regression with "ts" data:
Start = 2018(2), End = 2022(12)

Call:
dynlm(formula = inflation_expectations_3y ~ L(inflation_expectations_3y, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_3y.l1  inflation_expectations_1y.l1                  inflation.l1          economic_activity.l1  
                   -0.147815                     -0.028364                      0.085944                     -0.521432                      0.191968  
                   supply.l1                         dummy                        month1                        month2                        month3  
                    4.503876                     -0.003131                      0.164779                      0.144444                      0.242337  
                      month4                        month5                        month6                        month7                        month8  
                    0.241928                      0.086163                      0.121283                      0.173351                      0.193474  
                      month9                       month10                       month11  
                    0.174511                      0.103127                      0.223739  


Time series regression with "ts" data:
Start = 2018(2), End = 2022(12)

Call:
dynlm(formula = inflation_expectations_1y ~ L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_3y.l1                  inflation.l1          economic_activity.l1  
                    -0.15009                      -0.21914                       0.71963                       1.39059                      -0.34555  
                   supply.l1                         dummy                        month1                        month2                        month3  
                     4.61109                      -0.03439                       0.20696                       0.23268                       0.17102  
                      month4                        month5                        month6                        month7                        month8  
                     0.23841                       0.31238                       0.11123                       0.09073                       0.10770  
                      month9                       month10                       month11  
                     0.21245                       0.02488                       0.14348  


Time series regression with "ts" data:
Start = 2018(2), End = 2022(12)

Call:
dynlm(formula = inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month, data = tsdata, start = c(2018, 1), end = c(2023, 
    1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_3y.l1                  inflation.l1          economic_activity.l1  
                    0.006429                      0.615904                     -0.015539                      0.049965                      0.004078  
                   supply.l1                         dummy                        month1                        month2                        month3  
                    0.388593                     -0.022019                      0.021433                      0.007217                      0.004456  
                      month4                        month5                        month6                        month7                        month8  
                    0.022966                      0.033222                     -0.008103                      0.013481                      0.009054  
                      month9                       month10                       month11  
                    0.023715                     -0.005864                      0.018319  


Time series regression with "ts" data:
Start = 2018(2), End = 2022(12)

Call:
dynlm(formula = economic_activity ~ L(economic_activity, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation_expectations_3y, 
    1:num_lags) + L(inflation, 1:num_lags) + L(tsdata[, topic], 
    1:num_lags) + dummy + month, data = tsdata, start = c(2018, 
    1), end = c(2023, 1))

Coefficients:
                   Intercept          economic_acticity.l1  inflation_expectations_1y.l1  inflation_expectations_3y.l1                  inflation.l1  
                    0.014319                     -0.166261                      0.012454                      0.101946                      0.747443  
                   supply.l1                         dummy                        month1                        month2                        month3  
                   -0.980147                     -0.049107                      0.035744                     -0.013753                     -0.158020  
                      month4                        month5                        month6                        month7                        month8  
                    0.027114                      0.033660                     -0.003137                      0.050920                      0.013288  
                      month9                       month10                       month11  
                    0.031458                     -0.003319                      0.001683  


Time series regression with "ts" data:
Start = 2018(2), End = 2022(12)

Call:
dynlm(formula = tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept                     supply.l1          economic_activity.l1  inflation_expectations_1y.l1  inflation_expectations_3y.l1  
                   1.503e-03                    -1.895e-01                     1.891e-03                    -5.187e-03                     2.334e-03  
                inflation.l1                         dummy                        month1                        month2                        month3  
                   2.841e-02                     9.991e-03                    -3.854e-03                    -9.416e-03                    -2.300e-03  
                      month4                        month5                        month6                        month7                        month8  
                  -5.665e-03                    -7.490e-03                     8.236e-04                    -1.260e-02                     9.492e-05  
                      month9                       month10                       month11  
                   3.626e-04                    -4.248e-03                    -4.638e-04  

[1] "diagnostics"
[1] "heteroskedasticity"

	ARCH (multivariate)

data:  Residuals of VAR object model
Chi-squared = 238.37, df = 225, p-value = 0.258

[1] "serial correlation"

	Breusch-Godfrey LM test

data:  Residuals of VAR object model
Chi-squared = 195.08, df = 125, p-value = 6.134e-05

[1] "inflation expectations_3y"

Linear hypothesis test:
supply.l1 = 0

Model 1: restricted model
Model 2: inflation_expectations_3y ~ L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     42                 
2     41  1 2.4877 0.1224
[1] "inflation expectations_1y"

Linear hypothesis test:
supply.l1 = 0

Model 1: restricted model
Model 2: inflation_expectations_1y ~ L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     42                 
2     41  1 1.5627 0.2184
[1] "inflation"

Linear hypothesis test:
supply.l1 = 0

Model 1: restricted model
Model 2: inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     42                 
2     41  1 0.6046 0.4413
[1] "economic_activity"

Linear hypothesis test:
supply.l1 = 0

Model 1: restricted model
Model 2: economic_activity ~ L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df     F Pr(>F)
1     42                
2     41  1 0.135 0.7152
[1] "feedback effects"
[1] "topic expectations 3y"

Linear hypothesis test:
inflation_expectations_3y.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     42                 
2     41  1 0.0914 0.7639
[1] "topic expectations_1y"

Linear hypothesis test:
inflation_expectations_1y.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     42                 
2     41  1 1.4463  0.236
[1] "topic inflation"

Linear hypothesis test:
inflation.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     42                 
2     41  1 1.1556 0.2887
[1] "topic activitiy"

Linear hypothesis test:
economic_activity.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     42                 
2     41  1 0.0469 0.8296
