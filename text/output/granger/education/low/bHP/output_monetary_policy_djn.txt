
Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = inflation_expectations_3y ~ L(inflation_expectations_3y, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_3y.l1  inflation_expectations_1y.l1                  inflation.l1  
                  -0.1101336                     0.1494370                    -0.0223352                     2.1651378  
        economic_activity.l1            monetary_policy.l1                         dummy                        month1  
                  -0.2742898                     0.6545983                    -0.2181243                     0.2030160  
                      month2                        month3                        month4                        month5  
                  -0.0007411                     0.0253853                     0.2440535                     0.2910371  
                      month6                        month7                        month8                        month9  
                   0.2010779                     0.1665904                    -0.0496046                     0.2907740  
                     month10                       month11  
                   0.2001850                     0.0193502  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = inflation_expectations_1y ~ L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_3y.l1                  inflation.l1  
                    -0.16760                      -0.02228                       0.47411                       0.17064  
        economic_activity.l1            monetary_policy.l1                         dummy                        month1  
                    -0.81164                       1.95378                      -0.33305                       0.15728  
                      month2                        month3                        month4                        month5  
                    -0.04098                       0.40360                       0.21245                       0.48449  
                      month6                        month7                        month8                        month9  
                     0.61359                       0.22484                       0.28390                       0.05694  
                     month10                       month11  
                     0.17521                      -0.14226  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month, data = tsdata, start = c(2018, 1), end = c(2023, 
    1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_3y.l1                  inflation.l1  
                   0.0047637                     0.2311707                     0.0059171                     0.0104001  
        economic_activity.l1            monetary_policy.l1                         dummy                        month1  
                   0.0300844                    -0.0236321                    -0.0338421                    -0.0094299  
                      month2                        month3                        month4                        month5  
                   0.0004945                     0.0026376                    -0.0103233                     0.0157622  
                      month6                        month7                        month8                        month9  
                   0.0180718                    -0.0245054                    -0.0033175                    -0.0076682  
                     month10                       month11  
                   0.0109979                    -0.0159070  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = economic_activity ~ L(economic_activity, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation_expectations_3y, 
    1:num_lags) + L(inflation, 1:num_lags) + L(tsdata[, topic], 
    1:num_lags) + dummy + month, data = tsdata, start = c(2018, 
    1), end = c(2023, 1))

Coefficients:
                   Intercept          economic_acticity.l1  inflation_expectations_1y.l1  inflation_expectations_3y.l1  
                   -0.003830                     -0.178623                     -0.008405                     -0.010189  
                inflation.l1            monetary_policy.l1                         dummy                        month1  
                    0.905543                      0.394658                     -0.049030                      0.006663  
                      month2                        month3                        month4                        month5  
                    0.015767                     -0.012884                     -0.144387                      0.035426  
                      month6                        month7                        month8                        month9  
                    0.058381                      0.009915                      0.060860                      0.037295  
                     month10                       month11  
                    0.039945                     -0.004085  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept            monetary_policy.l1          economic_activity.l1  inflation_expectations_1y.l1  
                  -0.0036271                     0.4835278                    -0.0050584                     0.0136261  
inflation_expectations_3y.l1                  inflation.l1                         dummy                        month1  
                   0.0007005                     0.0466291                    -0.0028865                     0.0276675  
                      month2                        month3                        month4                        month5  
                   0.0238209                    -0.0071952                     0.0138944                    -0.0023660  
                      month6                        month7                        month8                        month9  
                  -0.0152603                    -0.0184336                    -0.0019154                    -0.0053293  
                     month10                       month11  
                   0.0351289                     0.0086231  

[1] "diagnostics"
[1] "heteroskedasticity"

	ARCH (multivariate)

data:  Residuals of VAR object model
Chi-squared = 295.94, df = 225, p-value = 0.001048

[1] "serial correlation"

	Breusch-Godfrey LM test

data:  Residuals of VAR object model
Chi-squared = 197.56, df = 125, p-value = 3.788e-05

[1] "inflation expectations_3y"
Linear hypothesis test

Hypothesis:
monetary_policy.l1 = 0

Model 1: restricted model
Model 2: inflation_expectations_3y ~ L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 0.2418 0.6255
[1] "inflation expectations_1y"
Linear hypothesis test

Hypothesis:
monetary_policy.l1 = 0

Model 1: restricted model
Model 2: inflation_expectations_1y ~ L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 2.3597  0.132
[1] "inflation"
Linear hypothesis test

Hypothesis:
monetary_policy.l1 = 0

Model 1: restricted model
Model 2: inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 0.0956 0.7587
[1] "economic_activity"
Linear hypothesis test

Hypothesis:
monetary_policy.l1 = 0

Model 1: restricted model
Model 2: economic_activity ~ L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 1.2852 0.2634
[1] "feedback effects"
[1] "topic expectations 3y"
Linear hypothesis test

Hypothesis:
inflation_expectations_3y.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 0.0027 0.9586
[1] "topic expectations_1y"
Linear hypothesis test

Hypothesis:
inflation_expectations_1y.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 1.3641 0.2494
[1] "topic inflation"
Linear hypothesis test

Hypothesis:
inflation.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 0.1066 0.7457
[1] "topic activitiy"
Linear hypothesis test

Hypothesis:
economic_activity.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df     F Pr(>F)
1     43                
2     42  1 0.032 0.8589
