
Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation_expectations_3y ~ L(inflation_expectations_3y, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_3y.l1  inflation_expectations_3y.l2  inflation_expectations_1y.l1  
                     0.58652                       0.57303                       0.32202                      -0.14848  
inflation_expectations_1y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                     0.07033                       5.08852                      -4.95405                      -0.42887  
        economic_activity.l2                        war.l1                        war.l2                         dummy  
                     0.34962                      -5.72661                      13.04862                      -0.04291  
                      month1                        month2                        month3                        month4  
                     0.14959                       0.09205                      -0.03459                       0.25904  
                      month5                        month6                        month7                        month8  
                    -0.05273                      -0.06344                      -0.05370                      -0.12398  
                      month9                       month10                       month11  
                     0.25977                       0.07857                      -0.14276  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation_expectations_1y ~ L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                    -0.37266                       0.21148                       0.58459                       0.59465  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                    -0.15066                      -2.72917                      -1.53724                      -0.47985  
        economic_activity.l2                        war.l1                        war.l2                         dummy  
                     0.91823                       4.76108                       6.90214                      -0.08416  
                      month1                        month2                        month3                        month4  
                     0.26172                      -0.14070                       0.22705                      -0.17806  
                      month5                        month6                        month7                        month8  
                    -0.02367                       0.35503                      -0.30728                      -0.25170  
                      month9                       month10                       month11  
                    -0.15085                      -0.10401                      -0.05393  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month, data = tsdata, start = c(2018, 1), end = c(2023, 
    1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                  -0.0353865                     0.3347798                    -0.5025161                     0.0037831  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                   0.0017292                     0.0248932                    -0.0019716                     0.0260721  
        economic_activity.l2                        war.l1                        war.l2                         dummy  
                   0.0211577                    -0.0894415                     0.5932217                    -0.0352128  
                      month1                        month2                        month3                        month4  
                  -0.0170025                    -0.0021147                    -0.0069368                    -0.0197382  
                      month5                        month6                        month7                        month8  
                  -0.0075153                    -0.0008810                    -0.0350530                    -0.0006910  
                      month9                       month10                       month11  
                  -0.0152888                     0.0000206                    -0.0268904  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = economic_activity ~ L(economic_activity, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation_expectations_3y, 
    1:num_lags) + L(inflation, 1:num_lags) + L(tsdata[, topic], 
    1:num_lags) + dummy + month, data = tsdata, start = c(2018, 
    1), end = c(2023, 1))

Coefficients:
                   Intercept          economic_acticity.l1          economic_acticity.l2  inflation_expectations_1y.l1  
                    0.076258                     -0.279061                     -0.354269                     -0.001339  
inflation_expectations_1y.l2  inflation_expectations_3y.l1  inflation_expectations_3y.l2                  inflation.l1  
                   -0.011873                      0.024935                     -0.024540                      1.468979  
                inflation.l2                        war.l1                        war.l2                         dummy  
                   -0.211038                      1.155991                     -0.579097                     -0.071679  
                      month1                        month2                        month3                        month4  
                   -0.011210                      0.001393                     -0.032230                     -0.185053  
                      month5                        month6                        month7                        month8  
                    0.004667                     -0.027617                     -0.008386                      0.060878  
                      month9                       month10                       month11  
                    0.025507                      0.018741                     -0.017092  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept                        war.l1                        war.l2          economic_activity.l1  
                  -1.641e-02                     8.452e-01                    -4.133e-01                     1.258e-02  
        economic_activity.l2  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                  -1.980e-03                     3.126e-03                     7.098e-04                     3.741e-03  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2                         dummy  
                  -4.296e-03                    -2.590e-02                     2.571e-02                    -1.078e-03  
                      month1                        month2                        month3                        month4  
                   5.110e-03                     1.368e-02                     1.930e-02                    -2.421e-03  
                      month5                        month6                        month7                        month8  
                   9.219e-03                     2.972e-03                     2.171e-03                     1.417e-03  
                      month9                       month10                       month11  
                   5.070e-03                     6.504e-05                     3.876e-03  

[1] "diagnostics"
[1] "heteroskedasticity"

	ARCH (multivariate)

data:  Residuals of VAR object model
Chi-squared = 483.39, df = 450, p-value = 0.1338

[1] "serial correlation"

	Breusch-Godfrey LM test

data:  Residuals of VAR object model
Chi-squared = 224.25, df = 125, p-value = 1.248e-07

[1] "inflation expectations_3y"
Linear hypothesis test

Hypothesis:
war.l1 = 0
war.l2 = 0

Model 1: restricted model
Model 2: inflation_expectations_3y ~ L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.1781 0.3194
[1] "inflation expectations_1y"
Linear hypothesis test

Hypothesis:
war.l1 = 0
war.l2 = 0

Model 1: restricted model
Model 2: inflation_expectations_1y ~ L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F  Pr(>F)  
1     38                    
2     36  2 4.8192 0.01398 *
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "inflation"
Linear hypothesis test

Hypothesis:
war.l1 = 0
war.l2 = 0

Model 1: restricted model
Model 2: inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F  Pr(>F)  
1     38                    
2     36  2 2.7529 0.07717 .
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "economic_activity"
Linear hypothesis test

Hypothesis:
war.l1 = 0
war.l2 = 0

Model 1: restricted model
Model 2: economic_activity ~ L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.4809 0.6221
[1] "feedback effects"
[1] "topic expectations 3y"
Linear hypothesis test

Hypothesis:
inflation_expectations_3y.l1 = 0
inflation_expectations_3y.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.0651 0.3553
[1] "topic expectations_1y"
Linear hypothesis test

Hypothesis:
inflation_expectations_1y.l1 = 0
inflation_expectations_1y.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.9657 0.3904
[1] "topic inflation"
Linear hypothesis test

Hypothesis:
inflation.l1 = 0
inflation.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.0989 0.9061
[1] "topic activitiy"
Linear hypothesis test

Hypothesis:
economic_activity.l1 = 0
economic_activity.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.5136 0.6026
