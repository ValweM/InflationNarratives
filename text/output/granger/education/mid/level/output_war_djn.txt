
Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation_expectations_3y ~ L(inflation_expectations_3y, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_3y.l1  inflation_expectations_3y.l2  inflation_expectations_1y.l1  
                     0.26345                       0.81538                       0.12800                       0.35407  
inflation_expectations_1y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                    -0.30667                      -2.36415                      -2.49277                       0.36360  
        economic_activity.l2                        war.l1                        war.l2                         dummy  
                     1.24016                       5.84242                      -7.57409                      -0.07996  
                      month1                        month2                        month3                        month4  
                    -0.59327                      -0.09376                      -0.20910                      -0.04032  
                      month5                        month6                        month7                        month8  
                    -0.07665                       0.00806                      -0.21953                      -0.11579  
                      month9                       month10                       month11  
                    -0.10923                      -0.01626                      -0.26827  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation_expectations_1y ~ L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                   -0.178766                      0.594478                      0.338849                      0.347214  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                   -0.179146                      2.772861                     -1.246218                     -0.453370  
        economic_activity.l2                        war.l1                        war.l2                         dummy  
                    0.495924                      9.409146                     -8.770840                      0.122262  
                      month1                        month2                        month3                        month4  
                   -0.294018                      0.013202                     -0.005985                     -0.146858  
                      month5                        month6                        month7                        month8  
                   -0.083630                      0.196670                     -0.052899                     -0.266702  
                      month9                       month10                       month11  
                   -0.200477                     -0.129653                     -0.275030  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month, data = tsdata, start = c(2018, 1), end = c(2023, 
    1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                  -0.0550495                     0.3686462                    -0.4502636                    -0.0002446  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2          economic_activity.l1  
                   0.0076624                     0.0139079                     0.0093062                     0.0270210  
        economic_activity.l2                        war.l1                        war.l2                         dummy  
                   0.0227450                    -0.1534774                     0.3903883                    -0.0294119  
                      month1                        month2                        month3                        month4  
                  -0.0181503                     0.0067303                    -0.0005506                    -0.0102841  
                      month5                        month6                        month7                        month8  
                   0.0039506                     0.0107693                    -0.0258831                     0.0055866  
                      month9                       month10                       month11  
                  -0.0155766                     0.0072033                    -0.0235338  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = economic_activity ~ L(economic_activity, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation_expectations_3y, 
    1:num_lags) + L(inflation, 1:num_lags) + L(tsdata[, topic], 
    1:num_lags) + dummy + month, data = tsdata, start = c(2018, 
    1), end = c(2023, 1))

Coefficients:
                   Intercept          economic_acticity.l1          economic_acticity.l2  inflation_expectations_1y.l1  
                   0.0676177                    -0.2969528                    -0.3876429                    -0.0575536  
inflation_expectations_1y.l2  inflation_expectations_3y.l1  inflation_expectations_3y.l2                  inflation.l1  
                   0.0380936                     0.0345027                    -0.0245896                     1.3769744  
                inflation.l2                        war.l1                        war.l2                         dummy  
                  -0.0360379                     1.5278854                    -0.5248100                    -0.0772520  
                      month1                        month2                        month3                        month4  
                  -0.0025646                     0.0135815                    -0.0338430                    -0.1750770  
                      month5                        month6                        month7                        month8  
                   0.0004671                    -0.0151838                     0.0054600                     0.0664329  
                      month9                       month10                       month11  
                   0.0170496                     0.0335372                    -0.0115425  


Time series regression with "ts" data:
Start = 2018(3), End = 2022(13)

Call:
dynlm(formula = tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept                        war.l1                        war.l2          economic_activity.l1  
                  -0.0334814                     0.8926630                    -0.4380865                     0.0147555  
        economic_activity.l2  inflation_expectations_1y.l1  inflation_expectations_1y.l2  inflation_expectations_3y.l1  
                  -0.0024772                    -0.0015229                     0.0041689                    -0.0103109  
inflation_expectations_3y.l2                  inflation.l1                  inflation.l2                         dummy  
                   0.0160264                    -0.0347169                    -0.0109755                     0.0014412  
                      month1                        month2                        month3                        month4  
                   0.0093791                     0.0110049                     0.0219659                     0.0008754  
                      month5                        month6                        month7                        month8  
                   0.0153863                     0.0043353                     0.0064200                     0.0047503  
                      month9                       month10                       month11  
                   0.0067026                     0.0035500                     0.0085753  

[1] "diagnostics"
[1] "heteroskedasticity"

	ARCH (multivariate)

data:  Residuals of VAR object model
Chi-squared = 461.45, df = 450, p-value = 0.3443

[1] "serial correlation"

	Breusch-Godfrey LM test

data:  Residuals of VAR object model
Chi-squared = 215.94, df = 125, p-value = 8.163e-07

[1] "inflation expectations_3y"
Linear hypothesis test

Hypothesis:
war.l1 = 0
war.l2 = 0

Model 1: restricted model
Model 2: inflation_expectations_3y ~ L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F  Pr(>F)  
1     38                    
2     36  2 4.2241 0.02249 *
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "inflation expectations_1y"
Linear hypothesis test

Hypothesis:
war.l1 = 0
war.l2 = 0

Model 1: restricted model
Model 2: inflation_expectations_1y ~ L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 1.5914 0.2176
[1] "inflation"
Linear hypothesis test

Hypothesis:
war.l1 = 0
war.l2 = 0

Model 1: restricted model
Model 2: inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.5471 0.5834
[1] "economic_activity"
Linear hypothesis test

Hypothesis:
war.l1 = 0
war.l2 = 0

Model 1: restricted model
Model 2: economic_activity ~ L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.6566 0.5247
[1] "feedback effects"
[1] "topic expectations 3y"
Linear hypothesis test

Hypothesis:
inflation_expectations_3y.l1 = 0
inflation_expectations_3y.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F  Pr(>F)  
1     38                    
2     36  2 2.6766 0.08247 .
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "topic expectations_1y"
Linear hypothesis test

Hypothesis:
inflation_expectations_1y.l1 = 0
inflation_expectations_1y.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df     F Pr(>F)
1     38                
2     36  2 1.477 0.2418
[1] "topic inflation"
Linear hypothesis test

Hypothesis:
inflation.l1 = 0
inflation.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.2995  0.743
[1] "topic activitiy"
Linear hypothesis test

Hypothesis:
economic_activity.l1 = 0
economic_activity.l2 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     38                 
2     36  2 0.7784 0.4667
