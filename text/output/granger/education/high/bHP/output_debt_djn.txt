
Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = inflation_expectations_3y ~ L(inflation_expectations_3y, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_3y.l1  inflation_expectations_1y.l1                  inflation.l1  
                    0.055911                      0.247950                      0.079941                      1.771816  
        economic_activity.l1                       debt.l1                         dummy                        month1  
                   -0.124597                     -1.702645                     -0.134571                     -0.170986  
                      month2                        month3                        month4                        month5  
                    0.013001                      0.023247                     -0.025847                      0.071359  
                      month6                        month7                        month8                        month9  
                   -0.010583                     -0.176938                     -0.035839                     -0.128668  
                     month10                       month11  
                   -0.004826                     -0.032224  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = inflation_expectations_1y ~ L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_3y.l1                  inflation.l1  
                    -0.02854                       0.80382                      -0.20602                       2.87870  
        economic_activity.l1                       debt.l1                         dummy                        month1  
                    -0.40232                      -0.80093                      -0.05281                      -0.06548  
                      month2                        month3                        month4                        month5  
                     0.04307                       0.04743                       0.04591                       0.06342  
                      month6                        month7                        month8                        month9  
                     0.12958                      -0.01404                      -0.01582                      -0.05148  
                     month10                       month11  
                     0.07497                       0.06448  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month, data = tsdata, start = c(2018, 1), end = c(2023, 
    1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_3y.l1                  inflation.l1  
                    0.004570                      0.348514                     -0.021443                      0.008117  
        economic_activity.l1                       debt.l1                         dummy                        month1  
                    0.018543                     -0.102593                     -0.034179                     -0.013069  
                      month2                        month3                        month4                        month5  
                    0.002869                      0.001374                     -0.011008                      0.016006  
                      month6                        month7                        month8                        month9  
                    0.023193                     -0.022175                      0.002460                     -0.008731  
                     month10                       month11  
                    0.010056                     -0.017307  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = economic_activity ~ L(economic_activity, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation_expectations_3y, 
    1:num_lags) + L(inflation, 1:num_lags) + L(tsdata[, topic], 
    1:num_lags) + dummy + month, data = tsdata, start = c(2018, 
    1), end = c(2023, 1))

Coefficients:
                   Intercept          economic_acticity.l1  inflation_expectations_1y.l1  inflation_expectations_3y.l1  
                   -0.004417                     -0.249549                      0.002092                     -0.052712  
                inflation.l1                       debt.l1                         dummy                        month1  
                    0.775641                      1.063017                     -0.013537                      0.012043  
                      month2                        month3                        month4                        month5  
                    0.003680                     -0.017794                     -0.142806                      0.022285  
                      month6                        month7                        month8                        month9  
                    0.053046                      0.020676                      0.040438                      0.040763  
                     month10                       month11  
                    0.031379                      0.002225  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept                       debt.l1          economic_activity.l1  inflation_expectations_1y.l1  
                  -0.0019158                     0.3680715                    -0.0086911                    -0.0256160  
inflation_expectations_3y.l1                  inflation.l1                         dummy                        month1  
                   0.0069219                     0.2008750                    -0.0181993                     0.0098825  
                      month2                        month3                        month4                        month5  
                   0.0109743                    -0.0066798                     0.0078791                     0.0091774  
                      month6                        month7                        month8                        month9  
                  -0.0062285                     0.0052763                     0.0026894                    -0.0002185  
                     month10                       month11  
                   0.0106224                     0.0069305  

[1] "diagnostics"
[1] "heteroskedasticity"

	ARCH (multivariate)

data:  Residuals of VAR object model
Chi-squared = 267.48, df = 225, p-value = 0.02744

[1] "serial correlation"

	Breusch-Godfrey LM test

data:  Residuals of VAR object model
Chi-squared = 184.5, df = 125, p-value = 0.0004311

[1] "inflation expectations_3y"
Linear hypothesis test

Hypothesis:
debt.l1 = 0

Model 1: restricted model
Model 2: inflation_expectations_3y ~ L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 2.0602 0.1586
[1] "inflation expectations_1y"
Linear hypothesis test

Hypothesis:
debt.l1 = 0

Model 1: restricted model
Model 2: inflation_expectations_1y ~ L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df     F Pr(>F)
1     43                
2     42  1 0.196 0.6602
[1] "inflation"
Linear hypothesis test

Hypothesis:
debt.l1 = 0

Model 1: restricted model
Model 2: inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 0.1927 0.6629
[1] "economic_activity"
Linear hypothesis test

Hypothesis:
debt.l1 = 0

Model 1: restricted model
Model 2: economic_activity ~ L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 0.8464 0.3628
[1] "feedback effects"
[1] "topic expectations 3y"
Linear hypothesis test

Hypothesis:
inflation_expectations_3y.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 0.1107  0.741
[1] "topic expectations_1y"
Linear hypothesis test

Hypothesis:
inflation_expectations_1y.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)  
1     43                   
2     42  1 3.1707 0.0822 .
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "topic inflation"
Linear hypothesis test

Hypothesis:
inflation.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F  Pr(>F)  
1     43                    
2     42  1 3.1358 0.08385 .
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "topic activitiy"
Linear hypothesis test

Hypothesis:
economic_activity.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 0.1601 0.6911
