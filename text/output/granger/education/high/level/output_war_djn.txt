
Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = inflation_expectations_3y ~ L(inflation_expectations_3y, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_3y.l1  inflation_expectations_1y.l1                  inflation.l1  
                    0.587951                      0.797964                     -0.007790                      1.311432  
        economic_activity.l1                        war.l1                         dummy                        month1  
                   -0.187167                      2.698289                     -0.133176                     -0.160011  
                      month2                        month3                        month4                        month5  
                    0.106479                      0.024373                     -0.033448                      0.069234  
                      month6                        month7                        month8                        month9  
                   -0.023077                     -0.122833                      0.035660                     -0.055435  
                     month10                       month11  
                    0.076594                      0.002432  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = inflation_expectations_1y ~ L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(economic_activity, 1:num_lags) + 
    L(tsdata[, topic], 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_3y.l1                  inflation.l1  
                    -0.20409                       0.86505                       0.19518                       2.96924  
        economic_activity.l1                        war.l1                         dummy                        month1  
                    -0.40028                       0.82988                      -0.03477                      -0.05248  
                      month2                        month3                        month4                        month5  
                     0.08045                       0.02050                       0.01949                       0.04832  
                      month6                        month7                        month8                        month9  
                     0.08224                      -0.02805                       0.00240                      -0.02014  
                     month10                       month11  
                     0.12807                       0.08156  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month, data = tsdata, start = c(2018, 1), end = c(2023, 
    1))

Coefficients:
                   Intercept  inflation_expectations_1y.l1  inflation_expectations_3y.l1                  inflation.l1  
                   0.0011582                     0.4259257                     0.0056290                     0.0022784  
        economic_activity.l1                        war.l1                         dummy                        month1  
                   0.0194916                     0.0314060                    -0.0238788                    -0.0104324  
                      month2                        month3                        month4                        month5  
                  -0.0001994                    -0.0044378                    -0.0143694                     0.0133433  
                      month6                        month7                        month8                        month9  
                   0.0183522                    -0.0264937                    -0.0024121                    -0.0079610  
                     month10                       month11  
                   0.0111109                    -0.0169065  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = economic_activity ~ L(economic_activity, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation_expectations_3y, 
    1:num_lags) + L(inflation, 1:num_lags) + L(tsdata[, topic], 
    1:num_lags) + dummy + month, data = tsdata, start = c(2018, 
    1), end = c(2023, 1))

Coefficients:
                   Intercept          economic_acticity.l1  inflation_expectations_1y.l1  inflation_expectations_3y.l1  
                    0.115342                     -0.214643                     -0.016749                     -0.013764  
                inflation.l1                        war.l1                         dummy                        month1  
                    0.873399                      1.844989                     -0.048959                      0.002538  
                      month2                        month3                        month4                        month5  
                    0.001682                     -0.030526                     -0.190267                      0.005735  
                      month6                        month7                        month8                        month9  
                    0.037604                     -0.010408                      0.041737                      0.025236  
                     month10                       month11  
                    0.020520                     -0.004793  


Time series regression with "ts" data:
Start = 2018(2), End = 2023(1)

Call:
dynlm(formula = tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + dummy + month, data = tsdata, 
    start = c(2018, 1), end = c(2023, 1))

Coefficients:
                   Intercept                        war.l1          economic_activity.l1  inflation_expectations_1y.l1  
                  -0.0008847                     0.5853019                    -0.0025946                     0.0033861  
inflation_expectations_3y.l1                  inflation.l1                         dummy                        month1  
                  -0.0047801                     0.0325189                    -0.0012093                     0.0013304  
                      month2                        month3                        month4                        month5  
                   0.0103605                     0.0144547                     0.0009327                     0.0009203  
                      month6                        month7                        month8                        month9  
                   0.0022504                    -0.0005672                     0.0004155                     0.0033513  
                     month10                       month11  
                   0.0004403                     0.0014245  

[1] "diagnostics"
[1] "heteroskedasticity"

	ARCH (multivariate)

data:  Residuals of VAR object model
Chi-squared = 273.93, df = 225, p-value = 0.01431

[1] "serial correlation"

	Breusch-Godfrey LM test

data:  Residuals of VAR object model
Chi-squared = 219.28, df = 125, p-value = 3.874e-07

[1] "inflation expectations_3y"
Linear hypothesis test

Hypothesis:
war.l1 = 0

Model 1: restricted model
Model 2: inflation_expectations_3y ~ L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation_expectations_1y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 1.7631 0.1914
[1] "inflation expectations_1y"
Linear hypothesis test

Hypothesis:
war.l1 = 0

Model 1: restricted model
Model 2: inflation_expectations_1y ~ L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 0.1011  0.752
[1] "inflation"
Linear hypothesis test

Hypothesis:
war.l1 = 0

Model 1: restricted model
Model 2: inflation ~ L(inflation, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(economic_activity, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df     F Pr(>F)
1     43                
2     42  1 0.004   0.95
[1] "economic_activity"
Linear hypothesis test

Hypothesis:
war.l1 = 0

Model 1: restricted model
Model 2: economic_activity ~ L(economic_activity, 1:num_lags) + L(inflation_expectations_1y, 
    1:num_lags) + L(inflation_expectations_3y, 1:num_lags) + 
    L(inflation, 1:num_lags) + L(tsdata[, topic], 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 1.3212 0.2569
[1] "feedback effects"
[1] "topic expectations 3y"
Linear hypothesis test

Hypothesis:
inflation_expectations_3y.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 0.4384 0.5115
[1] "topic expectations_1y"
Linear hypothesis test

Hypothesis:
inflation_expectations_1y.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 0.9404 0.3377
[1] "topic inflation"
Linear hypothesis test

Hypothesis:
inflation.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 1.6003 0.2128
[1] "topic activitiy"
Linear hypothesis test

Hypothesis:
economic_activity.l1 = 0

Model 1: restricted model
Model 2: tsdata[, topic] ~ L(tsdata[, topic], 1:num_lags) + L(economic_activity, 
    1:num_lags) + L(inflation_expectations_1y, 1:num_lags) + 
    L(inflation_expectations_3y, 1:num_lags) + L(inflation, 1:num_lags) + 
    dummy + month

Note: Coefficient covariance matrix supplied.

  Res.Df Df      F Pr(>F)
1     43                 
2     42  1 0.1211 0.7296
